/**
 * AgentCachedTexture Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "../packet"
import { S32, U8, UUID } from "../types"

export interface AgentCachedTextureData {
	agentData: {
		agentId?: string
		sessionId?: string
		serialNum: number
	}
	wearableData?: {
		id: string
		textureIndex: number
	}[]
}

export const agentCachedTextureMetadata = {
	id: 384,
	name: "AgentCachedTexture",
	frequency: 2,
	blocks: [
		{
			name: "agentData",
			parameters: [
				["agentId", UUID],
				["sessionId", UUID],
				["serialNum", S32],
			],
		},
		{
			name: "wearableData",
			parameters: [
				["id", UUID],
				["textureIndex", U8],
			],
			multiple: true,
		},
	],
} satisfies PacketMetadata

export const agentCachedTexture = createPacketSender<AgentCachedTextureData>(
	agentCachedTextureMetadata,
)

export const createAgentCachedTextureDelegate =
	createPacketDelegate<AgentCachedTextureData>(agentCachedTextureMetadata)
