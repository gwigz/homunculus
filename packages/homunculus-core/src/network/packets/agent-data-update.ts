/**
 * AgentDataUpdate Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "../packet"
import { U64, UUID, Variable1 } from "../types"

export interface AgentDataUpdateData {
	agentData: {
		agentId?: string
		firstName: string | Buffer
		lastName: string | Buffer
		groupTitle: string | Buffer
		activeGroupId: string
		groupPowers: number | bigint
		groupName: string | Buffer
	}
}

export const agentDataUpdateMetadata = {
	id: 387,
	name: "AgentDataUpdate",
	frequency: 2,
	trusted: true,
	compression: true,
	blocks: [
		{
			name: "agentData",
			parameters: [
				["agentId", UUID],
				["firstName", Variable1],
				["lastName", Variable1],
				["groupTitle", Variable1],
				["activeGroupId", UUID],
				["groupPowers", U64],
				["groupName", Variable1],
			],
		},
	],
} satisfies PacketMetadata

export const agentDataUpdate = createPacketSender<AgentDataUpdateData>(
	agentDataUpdateMetadata,
)

export const createAgentDataUpdateDelegate =
	createPacketDelegate<AgentDataUpdateData>(agentDataUpdateMetadata)
