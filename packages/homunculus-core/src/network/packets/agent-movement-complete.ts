/**
 * AgentMovementComplete Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import { U32, U64, UUID, Variable2, Vector3 } from "../types"
import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "./packet"

export interface AgentMovementCompleteData {
	agentData?: {
		agentId?: string
		sessionId?: string
	}
	data?: {
		position: Vector3
		lookAt: Vector3
		regionHandle: number | bigint
		timestamp: number
	}
	simData?: {
		channelVersion: string | Buffer
	}
}

export const agentMovementCompleteMetadata = {
	id: 250,
	name: "AgentMovementComplete",
	frequency: 2,
	blocks: [
		{
			name: "agentData",
			parameters: [
				["agentId", UUID],
				["sessionId", UUID],
			],
		},
		{
			name: "data",
			parameters: [
				["position", Vector3],
				["lookAt", Vector3],
				["regionHandle", U64],
				["timestamp", U32],
			],
		},
		{
			name: "simData",
			parameters: [["channelVersion", Variable2]],
		},
	],
} satisfies PacketMetadata

export const agentMovementComplete =
	createPacketSender<AgentMovementCompleteData>(agentMovementCompleteMetadata)

export const createAgentMovementCompleteDelegate =
	createPacketDelegate<AgentMovementCompleteData>(agentMovementCompleteMetadata)
