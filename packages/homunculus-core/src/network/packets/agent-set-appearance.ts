/**
 * AgentSetAppearance Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import * as Types from "../types"
import { Packet } from "./packet"

export interface AgentSetAppearanceData {
	agentData: {
		agentId?: string
		sessionId?: string
		serialNum: number
		size: Types.Vector3
	}
	wearableData?: {
		cacheId: string
		textureIndex: number
	}[]
	objectData?: {
		textureEntry: string | Buffer
	}
	visualParam?: {
		paramValue: number
	}[]
}

export class AgentSetAppearance extends Packet<AgentSetAppearanceData> {
	public static override id = 84
	public static override frequency = 0
	public static override trusted = false
	public static override compression = true

	public static override format = new Map([
		[
			"agentData",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["agentId", Types.UUID],
					["sessionId", Types.UUID],
					["serialNum", Types.U32],
					["size", Types.Vector3],
				]),
			},
		],
		[
			"wearableData",
			{
				parameters: new Map<string, Types.Type>([
					["cacheId", Types.UUID],
					["textureIndex", Types.U8],
				]),
			},
		],
		[
			"objectData",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["textureEntry", Types.Variable2],
				]),
			},
		],
		[
			"visualParam",
			{
				parameters: new Map<string, Types.Type>([["paramValue", Types.U8]]),
			},
		],
	])
}
