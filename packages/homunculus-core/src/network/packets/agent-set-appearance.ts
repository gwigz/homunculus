/**
 * AgentSetAppearance Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import { U8, U32, UUID, Variable2, Vector3 } from "../types"
import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "./packet"

export interface AgentSetAppearanceData {
	agentData: {
		agentId?: string
		sessionId?: string
		serialNum: number
		size: Vector3
	}
	wearableData?: {
		cacheId: string
		textureIndex: number
	}[]
	objectData?: {
		textureEntry: string | Buffer
	}
	visualParam?: {
		paramValue: number
	}[]
}

export const agentSetAppearanceMetadata = {
	id: 84,
	name: "AgentSetAppearance",
	frequency: 2,
	compression: true,
	blocks: [
		{
			name: "agentData",
			parameters: [
				["agentId", UUID],
				["sessionId", UUID],
				["serialNum", U32],
				["size", Vector3],
			],
		},
		{
			name: "wearableData",
			parameters: [
				["cacheId", UUID],
				["textureIndex", U8],
			],
			multiple: true,
		},
		{
			name: "objectData",
			parameters: [["textureEntry", Variable2]],
		},
		{
			name: "visualParam",
			parameters: [["paramValue", U8]],
			multiple: true,
		},
	],
} satisfies PacketMetadata

export const agentSetAppearance = createPacketSender<AgentSetAppearanceData>(
	agentSetAppearanceMetadata,
)

export const createAgentSetAppearanceDelegate =
	createPacketDelegate<AgentSetAppearanceData>(agentSetAppearanceMetadata)
