/**
 * AgentThrottle Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "../packet"
import { U32, UUID, Variable1 } from "../types"

export interface AgentThrottleData {
	agentData?: {
		agentId?: string
		sessionId?: string
		circuitCode?: number
	}
	throttle?: {
		genCounter: number
		throttles: string | Buffer
	}
}

export const agentThrottleMetadata = {
	id: 81,
	name: "AgentThrottle",
	frequency: 2,
	compression: true,
	blocks: [
		{
			name: "agentData",
			parameters: [
				["agentId", UUID],
				["sessionId", UUID],
				["circuitCode", U32],
			],
		},
		{
			name: "throttle",
			parameters: [
				["genCounter", U32],
				["throttles", Variable1],
			],
		},
	],
} satisfies PacketMetadata

export const agentThrottle = createPacketSender<AgentThrottleData>(
	agentThrottleMetadata,
)

export const createAgentThrottleDelegate =
	createPacketDelegate<AgentThrottleData>(agentThrottleMetadata)
