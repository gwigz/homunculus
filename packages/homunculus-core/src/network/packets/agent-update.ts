/**
 * AgentUpdate Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import { F32, Quaternion, U8, U32, UUID, Vector3 } from "../types"
import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "./packet"

export interface AgentUpdateData {
	agentData: {
		agentId?: string
		sessionId?: string
		bodyRotation: Quaternion
		headRotation: Quaternion
		state: number
		cameraCenter: Vector3
		cameraAtAxis: Vector3
		cameraLeftAxis: Vector3
		cameraUpAxis: Vector3
		far: number
		controlFlags: number
		flags?: number
	}
}

export const agentUpdateMetadata = {
	id: 4,
	name: "AgentUpdate",
	compression: true,
	blocks: [
		{
			name: "agentData",
			parameters: [
				["agentId", UUID],
				["sessionId", UUID],
				["bodyRotation", Quaternion],
				["headRotation", Quaternion],
				["state", U8],
				["cameraCenter", Vector3],
				["cameraAtAxis", Vector3],
				["cameraLeftAxis", Vector3],
				["cameraUpAxis", Vector3],
				["far", F32],
				["controlFlags", U32],
				["flags", U8],
			],
		},
	],
} satisfies PacketMetadata

export const agentUpdate =
	createPacketSender<AgentUpdateData>(agentUpdateMetadata)

export const createAgentUpdateDelegate =
	createPacketDelegate<AgentUpdateData>(agentUpdateMetadata)
