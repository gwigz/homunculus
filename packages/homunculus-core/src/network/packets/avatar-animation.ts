/**
 * AvatarAnimation Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "../packet"
import { S32, UUID, Variable1 } from "../types"

export interface AvatarAnimationData {
	sender?: {
		id: string
	}
	animationList?: {
		animId: string
		animSequenceId: number
	}[]
	animationSourceList?: {
		objectId: string
	}[]
	physicalAvatarEventList?: {
		typeData: string | Buffer
	}[]
}

export const avatarAnimationMetadata = {
	id: 20,
	name: "AvatarAnimation",
	trusted: true,
	blocks: [
		{
			name: "sender",
			parameters: [["id", UUID]],
		},
		{
			name: "animationList",
			parameters: [
				["animId", UUID],
				["animSequenceId", S32],
			],
			multiple: true,
		},
		{
			name: "animationSourceList",
			parameters: [["objectId", UUID]],
			multiple: true,
		},
		{
			name: "physicalAvatarEventList",
			parameters: [["typeData", Variable1]],
			multiple: true,
		},
	],
} satisfies PacketMetadata

export const avatarAnimation = createPacketSender<AvatarAnimationData>(
	avatarAnimationMetadata,
)

export const createAvatarAnimationDelegate =
	createPacketDelegate<AvatarAnimationData>(avatarAnimationMetadata)
