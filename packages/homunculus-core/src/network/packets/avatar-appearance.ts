/**
 * AvatarAppearance Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import * as Types from "../types"
import { Packet } from "./packet"

export interface AvatarAppearanceData {
	sender?: {
		id: string
		isTrial: boolean
	}
	objectData?: {
		textureEntry: string | Buffer
	}
	visualParam?: {
		paramValue: number
	}[]
	appearanceData?: {
		appearanceVersion: number
		cofVersion: number
		flags: number
	}[]
	appearanceHover?: {
		hoverHeight: Types.Vector3
	}[]
	attachmentBlock?: {
		id: string
		attachmentPoint: number
	}[]
}

export class AvatarAppearance extends Packet<AvatarAppearanceData> {
	public static override id = 158
	public static override frequency = 0
	public static override trusted = true
	public static override compression = true

	public static override format = new Map([
		[
			"sender",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["id", Types.UUID],
					["isTrial", Types.Bool],
				]),
			},
		],
		[
			"objectData",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["textureEntry", Types.Variable2],
				]),
			},
		],
		[
			"visualParam",
			{
				parameters: new Map<string, Types.Type>([["paramValue", Types.U8]]),
			},
		],
		[
			"appearanceData",
			{
				parameters: new Map<string, Types.Type>([
					["appearanceVersion", Types.U8],
					["cofVersion", Types.S32],
					["flags", Types.U32],
				]),
			},
		],
		[
			"appearanceHover",
			{
				parameters: new Map<string, Types.Type>([
					["hoverHeight", Types.Vector3],
				]),
			},
		],
		[
			"attachmentBlock",
			{
				parameters: new Map<string, Types.Type>([
					["id", Types.UUID],
					["attachmentPoint", Types.U8],
				]),
			},
		],
	])
}
