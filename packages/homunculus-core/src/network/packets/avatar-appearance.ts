/**
 * AvatarAppearance Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "../packet"
import { Bool, S32, U8, U32, UUID, Variable2, Vector3 } from "../types"

export interface AvatarAppearanceData {
	sender?: {
		id: string
		isTrial: boolean
	}
	objectData?: {
		textureEntry: string | Buffer
	}
	visualParam?: {
		paramValue: number
	}[]
	appearanceData?: {
		appearanceVersion: number
		cofVersion: number
		flags: number
	}[]
	appearanceHover?: {
		hoverHeight: Vector3
	}[]
	attachmentBlock?: {
		id: string
		attachmentPoint: number
	}[]
}

export const avatarAppearanceMetadata = {
	id: 158,
	name: "AvatarAppearance",
	frequency: 2,
	trusted: true,
	compression: true,
	blocks: [
		{
			name: "sender",
			parameters: [
				["id", UUID],
				["isTrial", Bool],
			],
		},
		{
			name: "objectData",
			parameters: [["textureEntry", Variable2]],
		},
		{
			name: "visualParam",
			parameters: [["paramValue", U8]],
			multiple: true,
		},
		{
			name: "appearanceData",
			parameters: [
				["appearanceVersion", U8],
				["cofVersion", S32],
				["flags", U32],
			],
			multiple: true,
		},
		{
			name: "appearanceHover",
			parameters: [["hoverHeight", Vector3]],
			multiple: true,
		},
		{
			name: "attachmentBlock",
			parameters: [
				["id", UUID],
				["attachmentPoint", U8],
			],
			multiple: true,
		},
	],
} satisfies PacketMetadata

export const avatarAppearance = createPacketSender<AvatarAppearanceData>(
	avatarAppearanceMetadata,
)

export const createAvatarAppearanceDelegate =
	createPacketDelegate<AvatarAppearanceData>(avatarAppearanceMetadata)
