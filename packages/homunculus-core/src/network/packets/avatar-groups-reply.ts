/**
 * AvatarGroupsReply Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import { Bool, U64, UUID, Variable1 } from "../types"
import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "./packet"

export interface AvatarGroupsReplyData {
	agentData: {
		agentId?: string
		avatarId: string
	}
	groupData?: {
		groupPowers: number | bigint
		acceptNotices: boolean
		groupTitle: string | Buffer
		groupId: string
		groupName: string | Buffer
		groupInsigniaId: string
	}[]
	newGroupData?: {
		listInProfile: boolean
	}
}

export const avatarGroupsReplyMetadata = {
	id: 173,
	name: "AvatarGroupsReply",
	frequency: 2,
	trusted: true,
	compression: true,
	blocks: [
		{
			name: "agentData",
			parameters: [
				["agentId", UUID],
				["avatarId", UUID],
			],
		},
		{
			name: "groupData",
			parameters: [
				["groupPowers", U64],
				["acceptNotices", Bool],
				["groupTitle", Variable1],
				["groupId", UUID],
				["groupName", Variable1],
				["groupInsigniaId", UUID],
			],
			multiple: true,
		},
		{
			name: "newGroupData",
			parameters: [["listInProfile", Bool]],
		},
	],
} satisfies PacketMetadata

export const avatarGroupsReply = createPacketSender<AvatarGroupsReplyData>(
	avatarGroupsReplyMetadata,
)

export const createAvatarGroupsReplyDelegate =
	createPacketDelegate<AvatarGroupsReplyData>(avatarGroupsReplyMetadata)
