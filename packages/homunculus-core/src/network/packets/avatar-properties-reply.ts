/**
 * AvatarPropertiesReply Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import { U32, UUID, Variable1, Variable2 } from "../types"
import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "./packet"

export interface AvatarPropertiesReplyData {
	agentData: {
		agentId?: string
		avatarId: string
	}
	propertiesData?: {
		imageId: string
		fLImageId: string
		partnerId: string
		aboutText: string | Buffer
		fLAboutText: string | Buffer
		bornOn: string | Buffer
		profileUrl: string | Buffer
		charterMember: string | Buffer
		flags: number
	}
}

export const avatarPropertiesReplyMetadata = {
	id: 171,
	name: "AvatarPropertiesReply",
	frequency: 2,
	trusted: true,
	compression: true,
	blocks: [
		{
			name: "agentData",
			parameters: [
				["agentId", UUID],
				["avatarId", UUID],
			],
		},
		{
			name: "propertiesData",
			parameters: [
				["imageId", UUID],
				["fLImageId", UUID],
				["partnerId", UUID],
				["aboutText", Variable2],
				["fLAboutText", Variable1],
				["bornOn", Variable1],
				["profileUrl", Variable1],
				["charterMember", Variable1],
				["flags", U32],
			],
		},
	],
} satisfies PacketMetadata

export const avatarPropertiesReply =
	createPacketSender<AvatarPropertiesReplyData>(avatarPropertiesReplyMetadata)

export const createAvatarPropertiesReplyDelegate =
	createPacketDelegate<AvatarPropertiesReplyData>(avatarPropertiesReplyMetadata)
