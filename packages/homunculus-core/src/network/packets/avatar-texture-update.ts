/**
 * AvatarTextureUpdate Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import { Bool, U8, UUID, Variable1 } from "../types"
import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "./packet"

export interface AvatarTextureUpdateData {
	agentData: {
		agentId?: string
		texturesChanged: boolean
	}
	wearableData?: {
		cacheId: string
		textureIndex: number
		hostName: string | Buffer
	}[]
	textureData?: {
		textureId: string
	}[]
}

export const avatarTextureUpdateMetadata = {
	id: 4,
	name: "AvatarTextureUpdate",
	frequency: 2,
	trusted: true,
	compression: true,
	blocks: [
		{
			name: "agentData",
			parameters: [
				["agentId", UUID],
				["texturesChanged", Bool],
			],
		},
		{
			name: "wearableData",
			parameters: [
				["cacheId", UUID],
				["textureIndex", U8],
				["hostName", Variable1],
			],
			multiple: true,
		},
		{
			name: "textureData",
			parameters: [["textureId", UUID]],
			multiple: true,
		},
	],
} satisfies PacketMetadata

export const avatarTextureUpdate = createPacketSender<AvatarTextureUpdateData>(
	avatarTextureUpdateMetadata,
)

export const createAvatarTextureUpdateDelegate =
	createPacketDelegate<AvatarTextureUpdateData>(avatarTextureUpdateMetadata)
