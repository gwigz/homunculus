/**
 * AvatarTextureUpdate Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import * as Types from "~/network/types"
import { Packet } from "./packet"

export interface AvatarTextureUpdateData {
	agentData: {
		agentId?: string
		texturesChanged: boolean
	}
	wearableData?: {
		cacheId: string
		textureIndex: number
		hostName: string | Buffer
	}[]
	textureData?: {
		textureId: string
	}[]
}

export class AvatarTextureUpdate extends Packet<AvatarTextureUpdateData> {
	public static override id = 4
	public static override frequency = 0
	public static override trusted = true
	public static override compression = true

	public static override format = new Map([
		[
			"agentData",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["agentId", Types.UUID],
					["texturesChanged", Types.Bool],
				]),
			},
		],
		[
			"wearableData",
			{
				parameters: new Map<string, Types.Type>([
					["cacheId", Types.UUID],
					["textureIndex", Types.U8],
					["hostName", Types.Variable1],
				]),
			},
		],
		[
			"textureData",
			{
				parameters: new Map<string, Types.Type>([["textureId", Types.UUID]]),
			},
		],
	])
}
