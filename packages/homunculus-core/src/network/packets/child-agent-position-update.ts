/**
 * ChildAgentPositionUpdate Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import { Bool, U32, U64, UUID, Vector3 } from "../types"
import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "./packet"

export interface ChildAgentPositionUpdateData {
	agentData: {
		regionHandle: number | bigint
		viewerCircuitCode: number
		agentId?: string
		sessionId?: string
		agentPos: Vector3
		agentVel: Vector3
		center: Vector3
		size: Vector3
		atAxis: Vector3
		leftAxis: Vector3
		upAxis: Vector3
		changedGrid: boolean
	}
}

export const childAgentPositionUpdateMetadata = {
	id: 27,
	name: "ChildAgentPositionUpdate",
	trusted: true,
	blocks: [
		{
			name: "agentData",
			parameters: [
				["regionHandle", U64],
				["viewerCircuitCode", U32],
				["agentId", UUID],
				["sessionId", UUID],
				["agentPos", Vector3],
				["agentVel", Vector3],
				["center", Vector3],
				["size", Vector3],
				["atAxis", Vector3],
				["leftAxis", Vector3],
				["upAxis", Vector3],
				["changedGrid", Bool],
			],
		},
	],
} satisfies PacketMetadata

export const childAgentPositionUpdate =
	createPacketSender<ChildAgentPositionUpdateData>(
		childAgentPositionUpdateMetadata,
	)

export const createChildAgentPositionUpdateDelegate =
	createPacketDelegate<ChildAgentPositionUpdateData>(
		childAgentPositionUpdateMetadata,
	)
