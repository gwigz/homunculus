/**
 * ChildAgentPositionUpdate Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import * as Types from "../types"
import { Packet } from "./packet"

export interface ChildAgentPositionUpdateData {
	agentData: {
		regionHandle: number | bigint
		viewerCircuitCode: number
		agentId?: string | Buffer
		sessionId?: string | Buffer
		agentPos: Types.Vector3
		agentVel: Types.Vector3
		center: Types.Vector3
		size: Types.Vector3
		atAxis: Types.Vector3
		leftAxis: Types.Vector3
		upAxis: Types.Vector3
		changedGrid: boolean
	}
}

export class ChildAgentPositionUpdate extends Packet<ChildAgentPositionUpdateData> {
	public static override id = 27
	public static override frequency = 2
	public static override trusted = true
	public static override compression = false

	public static override format = new Map([
		[
			"agentData",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["regionHandle", Types.U64],
					["viewerCircuitCode", Types.U32],
					["agentId", Types.UUID],
					["sessionId", Types.UUID],
					["agentPos", Types.Vector3],
					["agentVel", Types.Vector3],
					["center", Types.Vector3],
					["size", Types.Vector3],
					["atAxis", Types.Vector3],
					["leftAxis", Types.Vector3],
					["upAxis", Types.Vector3],
					["changedGrid", Types.Bool],
				]),
			},
		],
	])
}
