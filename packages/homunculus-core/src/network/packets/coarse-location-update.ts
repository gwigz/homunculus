/**
 * CoarseLocationUpdate Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import * as Types from "~/network/types"
import { Packet } from "./packet"

export interface CoarseLocationUpdateData {
	location?: {
		x: number
		y: number
		z: number
	}[]
	index?: {
		you: number
		prey: number
	}
	agentData?: {
		agentId?: string
	}[]
}

export class CoarseLocationUpdate extends Packet<CoarseLocationUpdateData> {
	public static override id = 6
	public static override frequency = 1
	public static override trusted = true
	public static override compression = false

	public static override format = new Map([
		[
			"location",
			{
				parameters: new Map<string, Types.Type>([
					["x", Types.U8],
					["y", Types.U8],
					["z", Types.U8],
				]),
			},
		],
		[
			"index",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["you", Types.S16],
					["prey", Types.S16],
				]),
			},
		],
		[
			"agentData",
			{
				parameters: new Map<string, Types.Type>([["agentId", Types.UUID]]),
			},
		],
	])
}
