/**
 * CrossedRegion Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import { IP, Port, U64, UUID, Variable2, Vector3 } from "../types"
import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "./packet"

export interface CrossedRegionData {
	agentData?: {
		agentId?: string
		sessionId?: string
	}
	regionData?: {
		simIp: IP
		simPort: Port
		regionHandle: number | bigint
		seedCapability: string | Buffer
	}
	info?: {
		position: Vector3
		lookAt: Vector3
	}
}

export const crossedRegionMetadata = {
	id: 7,
	name: "CrossedRegion",
	frequency: 1,
	trusted: true,
	blocks: [
		{
			name: "agentData",
			parameters: [
				["agentId", UUID],
				["sessionId", UUID],
			],
		},
		{
			name: "regionData",
			parameters: [
				["simIp", IP],
				["simPort", Port],
				["regionHandle", U64],
				["seedCapability", Variable2],
			],
		},
		{
			name: "info",
			parameters: [
				["position", Vector3],
				["lookAt", Vector3],
			],
		},
	],
} satisfies PacketMetadata

export const crossedRegion = createPacketSender<CrossedRegionData>(
	crossedRegionMetadata,
)

export const createCrossedRegionDelegate =
	createPacketDelegate<CrossedRegionData>(crossedRegionMetadata)
