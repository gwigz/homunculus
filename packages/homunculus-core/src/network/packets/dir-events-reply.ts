/**
 * DirEventsReply Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import { U32, UUID, Variable1 } from "../types"
import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "./packet"

export interface DirEventsReplyData {
	agentData?: {
		agentId?: string
	}
	queryData?: {
		queryId: string
	}
	queryReplies?: {
		ownerId: string
		name: string | Buffer
		eventId: number
		date: string | Buffer
		unixTime: number
		eventFlags: number
	}[]
	statusData?: {
		status: number
	}[]
}

export const dirEventsReplyMetadata = {
	id: 37,
	name: "DirEventsReply",
	frequency: 2,
	trusted: true,
	compression: true,
	blocks: [
		{
			name: "agentData",
			parameters: [["agentId", UUID]],
		},
		{
			name: "queryData",
			parameters: [["queryId", UUID]],
		},
		{
			name: "queryReplies",
			parameters: [
				["ownerId", UUID],
				["name", Variable1],
				["eventId", U32],
				["date", Variable1],
				["unixTime", U32],
				["eventFlags", U32],
			],
			multiple: true,
		},
		{
			name: "statusData",
			parameters: [["status", U32]],
			multiple: true,
		},
	],
} satisfies PacketMetadata

export const dirEventsReply = createPacketSender<DirEventsReplyData>(
	dirEventsReplyMetadata,
)

export const createDirEventsReplyDelegate =
	createPacketDelegate<DirEventsReplyData>(dirEventsReplyMetadata)
