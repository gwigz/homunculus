/**
 * EventInfoReply Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import * as Types from "~/network/types"
import { Packet } from "./packet"

export interface EventInfoReplyData {
	agentData?: {
		agentId?: string
	}
	eventData?: {
		eventId: number
		creator: string | Buffer
		name: string | Buffer
		category: string | Buffer
		desc: string | Buffer
		date: string | Buffer
		dateUtc: number
		duration: number
		cover: number
		amount: number
		simName: string | Buffer
		globalPos: Types.Vector3D
		eventFlags: number
	}
}

export class EventInfoReply extends Packet<EventInfoReplyData> {
	public static override id = 180
	public static override frequency = 0
	public static override trusted = true
	public static override compression = false

	public static override format = new Map([
		[
			"agentData",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([["agentId", Types.UUID]]),
			},
		],
		[
			"eventData",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["eventId", Types.U32],
					["creator", Types.Variable1],
					["name", Types.Variable1],
					["category", Types.Variable1],
					["desc", Types.Variable2],
					["date", Types.Variable1],
					["dateUtc", Types.U32],
					["duration", Types.U32],
					["cover", Types.U32],
					["amount", Types.U32],
					["simName", Types.Variable1],
					["globalPos", Types.Vector3D],
					["eventFlags", Types.U32],
				]),
			},
		],
	])
}
