/**
 * GenericError Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import * as Types from "../types"
import { Packet } from "./packet"

export interface GenericErrorData {
	agentData?: {
		agentId?: string | Buffer
	}
	data?: {
		code: number
		token: string | Buffer
		id: string | Buffer
		system: string | Buffer
		message: string | Buffer
		data: string | Buffer
	}
}

export class GenericError extends Packet<GenericErrorData> {
	public static override id = 423
	public static override frequency = 0
	public static override trusted = false
	public static override compression = true

	public static override format = new Map([
		[
			"agentData",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([["agentId", Types.UUID]]),
			},
		],
		[
			"data",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["code", Types.S32],
					["token", Types.Variable1],
					["id", Types.UUID],
					["system", Types.Variable1],
					["message", Types.Variable2],
					["data", Types.Variable2],
				]),
			},
		],
	])
}
