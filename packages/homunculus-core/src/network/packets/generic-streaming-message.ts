/**
 * GenericStreamingMessage Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "../packet"
import { U16, Variable2 } from "../types"

export interface GenericStreamingMessageData {
	methodData?: {
		method: number
	}
	dataBlock?: {
		data: string | Buffer
	}
}

export const genericStreamingMessageMetadata = {
	id: 31,
	name: "GenericStreamingMessage",
	trusted: true,
	blocks: [
		{
			name: "methodData",
			parameters: [["method", U16]],
		},
		{
			name: "dataBlock",
			parameters: [["data", Variable2]],
		},
	],
} satisfies PacketMetadata

export const genericStreamingMessage =
	createPacketSender<GenericStreamingMessageData>(
		genericStreamingMessageMetadata,
	)

export const createGenericStreamingMessageDelegate =
	createPacketDelegate<GenericStreamingMessageData>(
		genericStreamingMessageMetadata,
	)
