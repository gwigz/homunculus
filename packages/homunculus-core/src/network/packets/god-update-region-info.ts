/**
 * GodUpdateRegionInfo Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import * as Types from "../types"
import { Packet } from "./packet"

export interface GodUpdateRegionInfoData {
	agentData?: {
		agentId?: string | Buffer
		sessionId?: string | Buffer
	}
	regionInfo?: {
		simName: string | Buffer
		estateId: number
		parentEstateId: number
		regionFlags: number
		billableFactor: number
		pricePerMeter: number
		redirectGridX: number
		redirectGridY: number
	}
	regionInfo2?: {
		regionFlagsExtended: number | bigint
	}[]
}

export class GodUpdateRegionInfo extends Packet<GodUpdateRegionInfoData> {
	public static override id = 143
	public static override frequency = 0
	public static override trusted = false
	public static override compression = true

	public static override format = new Map([
		[
			"agentData",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["agentId", Types.UUID],
					["sessionId", Types.UUID],
				]),
			},
		],
		[
			"regionInfo",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["simName", Types.Variable1],
					["estateId", Types.U32],
					["parentEstateId", Types.U32],
					["regionFlags", Types.U32],
					["billableFactor", Types.F32],
					["pricePerMeter", Types.S32],
					["redirectGridX", Types.S32],
					["redirectGridY", Types.S32],
				]),
			},
		],
		[
			"regionInfo2",
			{
				parameters: new Map<string, Types.Type>([
					["regionFlagsExtended", Types.U64],
				]),
			},
		],
	])
}
