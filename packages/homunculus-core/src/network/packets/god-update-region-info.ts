/**
 * GodUpdateRegionInfo Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "../packet"
import { F32, S32, U32, U64, UUID, Variable1 } from "../types"

export interface GodUpdateRegionInfoData {
	agentData?: {
		agentId?: string
		sessionId?: string
	}
	regionInfo?: {
		simName: string | Buffer
		estateId: number
		parentEstateId: number
		regionFlags: number
		billableFactor: number
		pricePerMeter: number
		redirectGridX: number
		redirectGridY: number
	}
	regionInfo2?: {
		regionFlagsExtended: number | bigint
	}[]
}

export const godUpdateRegionInfoMetadata = {
	id: 143,
	name: "GodUpdateRegionInfo",
	frequency: 2,
	compression: true,
	blocks: [
		{
			name: "agentData",
			parameters: [
				["agentId", UUID],
				["sessionId", UUID],
			],
		},
		{
			name: "regionInfo",
			parameters: [
				["simName", Variable1],
				["estateId", U32],
				["parentEstateId", U32],
				["regionFlags", U32],
				["billableFactor", F32],
				["pricePerMeter", S32],
				["redirectGridX", S32],
				["redirectGridY", S32],
			],
		},
		{
			name: "regionInfo2",
			parameters: [["regionFlagsExtended", U64]],
			multiple: true,
		},
	],
} satisfies PacketMetadata

export const godUpdateRegionInfo = createPacketSender<GodUpdateRegionInfoData>(
	godUpdateRegionInfoMetadata,
)

export const createGodUpdateRegionInfoDelegate =
	createPacketDelegate<GodUpdateRegionInfoData>(godUpdateRegionInfoMetadata)
