/**
 * GodlikeMessage Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import * as Types from "../types"
import { Packet } from "./packet"

export interface GodlikeMessageData {
	agentData: {
		agentId?: string | Buffer
		sessionId?: string | Buffer
		transactionId: string | Buffer
	}
	methodData?: {
		method: string | Buffer
		invoice: string | Buffer
	}
	paramList?: {
		parameter: string | Buffer
	}[]
}

export class GodlikeMessage extends Packet<GodlikeMessageData> {
	public static override id = 259
	public static override frequency = 0
	public static override trusted = false
	public static override compression = true

	public static override format = new Map([
		[
			"agentData",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["agentId", Types.UUID],
					["sessionId", Types.UUID],
					["transactionId", Types.UUID],
				]),
			},
		],
		[
			"methodData",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["method", Types.Variable1],
					["invoice", Types.UUID],
				]),
			},
		],
		[
			"paramList",
			{
				parameters: new Map<string, Types.Type>([
					["parameter", Types.Variable1],
				]),
			},
		],
	])
}
