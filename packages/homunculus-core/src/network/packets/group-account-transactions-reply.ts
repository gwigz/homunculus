/**
 * GroupAccountTransactionsReply Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "../packet"
import { S32, UUID, Variable1 } from "../types"

export interface GroupAccountTransactionsReplyData {
	agentData: {
		agentId?: string
		groupId: string
	}
	moneyData?: {
		requestId: string
		intervalDays: number
		currentInterval: number
		startDate: string | Buffer
	}
	historyData?: {
		time: string | Buffer
		user: string | Buffer
		type: number
		item: string | Buffer
		amount: number
	}[]
}

export const groupAccountTransactionsReplyMetadata = {
	id: 358,
	name: "GroupAccountTransactionsReply",
	frequency: 2,
	trusted: true,
	compression: true,
	blocks: [
		{
			name: "agentData",
			parameters: [
				["agentId", UUID],
				["groupId", UUID],
			],
		},
		{
			name: "moneyData",
			parameters: [
				["requestId", UUID],
				["intervalDays", S32],
				["currentInterval", S32],
				["startDate", Variable1],
			],
		},
		{
			name: "historyData",
			parameters: [
				["time", Variable1],
				["user", Variable1],
				["type", S32],
				["item", Variable1],
				["amount", S32],
			],
			multiple: true,
		},
	],
} satisfies PacketMetadata

export const groupAccountTransactionsReply =
	createPacketSender<GroupAccountTransactionsReplyData>(
		groupAccountTransactionsReplyMetadata,
	)

export const createGroupAccountTransactionsReplyDelegate =
	createPacketDelegate<GroupAccountTransactionsReplyData>(
		groupAccountTransactionsReplyMetadata,
	)
