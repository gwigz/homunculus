/**
 * GroupActiveProposalItemReply Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import * as Types from "../types"
import { Packet } from "./packet"

export interface GroupActiveProposalItemReplyData {
	agentData: {
		agentId?: string
		groupId: string
	}
	transactionData?: {
		transactionId: string
		totalNumItems: number
	}
	proposalData?: {
		voteId: string
		voteInitiator: string
		terseDateId: string | Buffer
		startDateTime: string | Buffer
		endDateTime: string | Buffer
		alreadyVoted: boolean
		voteCast: string | Buffer
		majority: number
		quorum: number
		proposalText: string | Buffer
	}[]
}

export class GroupActiveProposalItemReply extends Packet<GroupActiveProposalItemReplyData> {
	public static override id = 360
	public static override frequency = 0
	public static override trusted = true
	public static override compression = true

	public static override format = new Map([
		[
			"agentData",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["agentId", Types.UUID],
					["groupId", Types.UUID],
				]),
			},
		],
		[
			"transactionData",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["transactionId", Types.UUID],
					["totalNumItems", Types.U32],
				]),
			},
		],
		[
			"proposalData",
			{
				parameters: new Map<string, Types.Type>([
					["voteId", Types.UUID],
					["voteInitiator", Types.UUID],
					["terseDateId", Types.Variable1],
					["startDateTime", Types.Variable1],
					["endDateTime", Types.Variable1],
					["alreadyVoted", Types.Bool],
					["voteCast", Types.Variable1],
					["majority", Types.F32],
					["quorum", Types.S32],
					["proposalText", Types.Variable1],
				]),
			},
		],
	])
}
