/**
 * GroupDataUpdate Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "../packet"
import { U64, UUID, Variable1 } from "../types"

export interface GroupDataUpdateData {
	agentGroupData?: {
		agentId: string
		groupId: string
		agentPowers: number | bigint
		groupTitle: string | Buffer
	}[]
}

export const groupDataUpdateMetadata = {
	id: 388,
	name: "GroupDataUpdate",
	frequency: 2,
	trusted: true,
	compression: true,
	blocks: [
		{
			name: "agentGroupData",
			parameters: [
				["agentId", UUID],
				["groupId", UUID],
				["agentPowers", U64],
				["groupTitle", Variable1],
			],
			multiple: true,
		},
	],
} satisfies PacketMetadata

export const groupDataUpdate = createPacketSender<GroupDataUpdateData>(
	groupDataUpdateMetadata,
)

export const createGroupDataUpdateDelegate =
	createPacketDelegate<GroupDataUpdateData>(groupDataUpdateMetadata)
