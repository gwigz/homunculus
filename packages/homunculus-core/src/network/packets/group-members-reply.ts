/**
 * GroupMembersReply Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import * as Types from "../types"
import { Packet } from "./packet"

export interface GroupMembersReplyData {
	agentData?: {
		agentId?: string
	}
	groupData?: {
		groupId: string
		requestId: string
		memberCount: number
	}
	memberData?: {
		agentId: string
		contribution: number
		onlineStatus: string | Buffer
		agentPowers: number | bigint
		title: string | Buffer
		isOwner: boolean
	}[]
}

export class GroupMembersReply extends Packet<GroupMembersReplyData> {
	public static override id = 367
	public static override frequency = 0
	public static override trusted = true
	public static override compression = true

	public static override format = new Map([
		[
			"agentData",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([["agentId", Types.UUID]]),
			},
		],
		[
			"groupData",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["groupId", Types.UUID],
					["requestId", Types.UUID],
					["memberCount", Types.S32],
				]),
			},
		],
		[
			"memberData",
			{
				parameters: new Map<string, Types.Type>([
					["agentId", Types.UUID],
					["contribution", Types.S32],
					["onlineStatus", Types.Variable1],
					["agentPowers", Types.U64],
					["title", Types.Variable1],
					["isOwner", Types.Bool],
				]),
			},
		],
	])
}
