/**
 * GroupMembersReply Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import { Bool, S32, U64, UUID, Variable1 } from "../types"
import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "./packet"

export interface GroupMembersReplyData {
	agentData?: {
		agentId?: string
	}
	groupData?: {
		groupId: string
		requestId: string
		memberCount: number
	}
	memberData?: {
		agentId: string
		contribution: number
		onlineStatus: string | Buffer
		agentPowers: number | bigint
		title: string | Buffer
		isOwner: boolean
	}[]
}

export const groupMembersReplyMetadata = {
	id: 367,
	name: "GroupMembersReply",
	frequency: 2,
	trusted: true,
	compression: true,
	blocks: [
		{
			name: "agentData",
			parameters: [["agentId", UUID]],
		},
		{
			name: "groupData",
			parameters: [
				["groupId", UUID],
				["requestId", UUID],
				["memberCount", S32],
			],
		},
		{
			name: "memberData",
			parameters: [
				["agentId", UUID],
				["contribution", S32],
				["onlineStatus", Variable1],
				["agentPowers", U64],
				["title", Variable1],
				["isOwner", Bool],
			],
			multiple: true,
		},
	],
} satisfies PacketMetadata

export const groupMembersReply = createPacketSender<GroupMembersReplyData>(
	groupMembersReplyMetadata,
)

export const createGroupMembersReplyDelegate =
	createPacketDelegate<GroupMembersReplyData>(groupMembersReplyMetadata)
