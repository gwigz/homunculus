/**
 * GroupNoticeAdd Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "../packet"
import { U8, UUID, Variable1, Variable2 } from "../types"

export interface GroupNoticeAddData {
	agentData?: {
		agentId?: string
	}
	messageBlock?: {
		toGroupId: string
		id: string
		dialog: number
		fromAgentName: string | Buffer
		message: string | Buffer
		binaryBucket: string | Buffer
	}
}

export const groupNoticeAddMetadata = {
	id: 61,
	name: "GroupNoticeAdd",
	frequency: 2,
	trusted: true,
	blocks: [
		{
			name: "agentData",
			parameters: [["agentId", UUID]],
		},
		{
			name: "messageBlock",
			parameters: [
				["toGroupId", UUID],
				["id", UUID],
				["dialog", U8],
				["fromAgentName", Variable1],
				["message", Variable2],
				["binaryBucket", Variable2],
			],
		},
	],
} satisfies PacketMetadata

export const groupNoticeAdd = createPacketSender<GroupNoticeAddData>(
	groupNoticeAddMetadata,
)

export const createGroupNoticeAddDelegate =
	createPacketDelegate<GroupNoticeAddData>(groupNoticeAddMetadata)
