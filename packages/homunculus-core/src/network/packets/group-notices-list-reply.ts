/**
 * GroupNoticesListReply Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import { Bool, U8, U32, UUID, Variable2 } from "../types"
import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "./packet"

export interface GroupNoticesListReplyData {
	agentData: {
		agentId?: string
		groupId: string
	}
	data?: {
		noticeId: string
		timestamp: number
		fromName: string | Buffer
		subject: string | Buffer
		hasAttachment: boolean
		assetType: number
	}[]
}

export const groupNoticesListReplyMetadata = {
	id: 59,
	name: "GroupNoticesListReply",
	frequency: 2,
	trusted: true,
	blocks: [
		{
			name: "agentData",
			parameters: [
				["agentId", UUID],
				["groupId", UUID],
			],
		},
		{
			name: "data",
			parameters: [
				["noticeId", UUID],
				["timestamp", U32],
				["fromName", Variable2],
				["subject", Variable2],
				["hasAttachment", Bool],
				["assetType", U8],
			],
			multiple: true,
		},
	],
} satisfies PacketMetadata

export const groupNoticesListReply =
	createPacketSender<GroupNoticesListReplyData>(groupNoticesListReplyMetadata)

export const createGroupNoticesListReplyDelegate =
	createPacketDelegate<GroupNoticesListReplyData>(groupNoticesListReplyMetadata)
