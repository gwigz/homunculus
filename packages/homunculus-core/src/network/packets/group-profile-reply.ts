/**
 * GroupProfileReply Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import * as Types from "../types"
import { Packet } from "./packet"

export interface GroupProfileReplyData {
	agentData?: {
		agentId?: string
	}
	groupData?: {
		groupId: string
		name: string | Buffer
		charter: string | Buffer
		showInList: boolean
		memberTitle: string | Buffer
		powersMask: number | bigint
		insigniaId: string
		founderId: string
		membershipFee: number
		openEnrollment: boolean
		money: number
		groupMembershipCount: number
		groupRolesCount: number
		allowPublish: boolean
		maturePublish: boolean
		ownerRole: string
	}
}

export class GroupProfileReply extends Packet<GroupProfileReplyData> {
	public static override id = 352
	public static override frequency = 0
	public static override trusted = true
	public static override compression = true

	public static override format = new Map([
		[
			"agentData",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([["agentId", Types.UUID]]),
			},
		],
		[
			"groupData",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["groupId", Types.UUID],
					["name", Types.Variable1],
					["charter", Types.Variable2],
					["showInList", Types.Bool],
					["memberTitle", Types.Variable1],
					["powersMask", Types.U64],
					["insigniaId", Types.UUID],
					["founderId", Types.UUID],
					["membershipFee", Types.S32],
					["openEnrollment", Types.Bool],
					["money", Types.S32],
					["groupMembershipCount", Types.S32],
					["groupRolesCount", Types.S32],
					["allowPublish", Types.Bool],
					["maturePublish", Types.Bool],
					["ownerRole", Types.UUID],
				]),
			},
		],
	])
}
