/**
 * GroupProfileReply Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import { Bool, S32, U64, UUID, Variable1, Variable2 } from "../types"
import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "./packet"

export interface GroupProfileReplyData {
	agentData?: {
		agentId?: string
	}
	groupData?: {
		groupId: string
		name: string | Buffer
		charter: string | Buffer
		showInList: boolean
		memberTitle: string | Buffer
		powersMask: number | bigint
		insigniaId: string
		founderId: string
		membershipFee: number
		openEnrollment: boolean
		money: number
		groupMembershipCount: number
		groupRolesCount: number
		allowPublish: boolean
		maturePublish: boolean
		ownerRole: string
	}
}

export const groupProfileReplyMetadata = {
	id: 352,
	name: "GroupProfileReply",
	frequency: 2,
	trusted: true,
	compression: true,
	blocks: [
		{
			name: "agentData",
			parameters: [["agentId", UUID]],
		},
		{
			name: "groupData",
			parameters: [
				["groupId", UUID],
				["name", Variable1],
				["charter", Variable2],
				["showInList", Bool],
				["memberTitle", Variable1],
				["powersMask", U64],
				["insigniaId", UUID],
				["founderId", UUID],
				["membershipFee", S32],
				["openEnrollment", Bool],
				["money", S32],
				["groupMembershipCount", S32],
				["groupRolesCount", S32],
				["allowPublish", Bool],
				["maturePublish", Bool],
				["ownerRole", UUID],
			],
		},
	],
} satisfies PacketMetadata

export const groupProfileReply = createPacketSender<GroupProfileReplyData>(
	groupProfileReplyMetadata,
)

export const createGroupProfileReplyDelegate =
	createPacketDelegate<GroupProfileReplyData>(groupProfileReplyMetadata)
