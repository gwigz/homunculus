/**
 * GroupRoleDataReply Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "../packet"
import { S32, U32, U64, UUID, Variable1 } from "../types"

export interface GroupRoleDataReplyData {
	agentData?: {
		agentId?: string
	}
	groupData?: {
		groupId: string
		requestId: string
		roleCount: number
	}
	roleData?: {
		roleId: string
		name: string | Buffer
		title: string | Buffer
		description: string | Buffer
		powers: number | bigint
		members: number
	}[]
}

export const groupRoleDataReplyMetadata = {
	id: 372,
	name: "GroupRoleDataReply",
	frequency: 2,
	trusted: true,
	blocks: [
		{
			name: "agentData",
			parameters: [["agentId", UUID]],
		},
		{
			name: "groupData",
			parameters: [
				["groupId", UUID],
				["requestId", UUID],
				["roleCount", S32],
			],
		},
		{
			name: "roleData",
			parameters: [
				["roleId", UUID],
				["name", Variable1],
				["title", Variable1],
				["description", Variable1],
				["powers", U64],
				["members", U32],
			],
			multiple: true,
		},
	],
} satisfies PacketMetadata

export const groupRoleDataReply = createPacketSender<GroupRoleDataReplyData>(
	groupRoleDataReplyMetadata,
)

export const createGroupRoleDataReplyDelegate =
	createPacketDelegate<GroupRoleDataReplyData>(groupRoleDataReplyMetadata)
