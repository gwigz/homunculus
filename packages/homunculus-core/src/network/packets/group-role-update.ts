/**
 * GroupRoleUpdate Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "../packet"
import { U8, U64, UUID, Variable1 } from "../types"

export interface GroupRoleUpdateData {
	agentData: {
		agentId?: string
		sessionId?: string
		groupId: string
	}
	roleData?: {
		roleId: string
		name: string | Buffer
		description: string | Buffer
		title: string | Buffer
		powers: number | bigint
		updateType: number
	}[]
}

export const groupRoleUpdateMetadata = {
	id: 378,
	name: "GroupRoleUpdate",
	frequency: 2,
	blocks: [
		{
			name: "agentData",
			parameters: [
				["agentId", UUID],
				["sessionId", UUID],
				["groupId", UUID],
			],
		},
		{
			name: "roleData",
			parameters: [
				["roleId", UUID],
				["name", Variable1],
				["description", Variable1],
				["title", Variable1],
				["powers", U64],
				["updateType", U8],
			],
			multiple: true,
		},
	],
} satisfies PacketMetadata

export const groupRoleUpdate = createPacketSender<GroupRoleUpdateData>(
	groupRoleUpdateMetadata,
)

export const createGroupRoleUpdateDelegate =
	createPacketDelegate<GroupRoleUpdateData>(groupRoleUpdateMetadata)
