/**
 * ImprovedInstantMessage Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import * as Types from "../types"
import { Packet } from "./packet"

export interface ImprovedInstantMessageData {
	agentData?: {
		agentId?: string | Buffer
		sessionId?: string | Buffer
	}
	messageBlock?: {
		fromGroup: boolean
		toAgentId: string | Buffer
		parentEstateId: number
		regionId: string | Buffer
		position: Types.Vector3
		offline: number
		dialog: number
		id: string | Buffer
		timestamp: number
		fromAgentName: string | Buffer
		message: string | Buffer
		binaryBucket: string | Buffer
	}
}

export class ImprovedInstantMessage extends Packet<ImprovedInstantMessageData> {
	public static override id = 254
	public static override frequency = 0
	public static override trusted = false
	public static override compression = true

	public static override format = new Map([
		[
			"agentData",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["agentId", Types.UUID],
					["sessionId", Types.UUID],
				]),
			},
		],
		[
			"messageBlock",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["fromGroup", Types.Bool],
					["toAgentId", Types.UUID],
					["parentEstateId", Types.U32],
					["regionId", Types.UUID],
					["position", Types.Vector3],
					["offline", Types.U8],
					["dialog", Types.U8],
					["id", Types.UUID],
					["timestamp", Types.U32],
					["fromAgentName", Types.Variable1],
					["message", Types.Variable2],
					["binaryBucket", Types.Variable2],
				]),
			},
		],
	])
}
