/**
 * KickUser Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import * as Types from "../types"
import { Packet } from "./packet"

export interface KickUserData {
	targetBlock?: {
		targetIp: Types.IP
		targetPort: Types.Port
	}
	userInfo?: {
		agentId: string
		sessionId: string
		reason: string | Buffer
	}
}

export class KickUser extends Packet<KickUserData> {
	public static override id = 163
	public static override frequency = 0
	public static override trusted = true
	public static override compression = false

	public static override format = new Map([
		[
			"targetBlock",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["targetIp", Types.IP],
					["targetPort", Types.Port],
				]),
			},
		],
		[
			"userInfo",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["agentId", Types.UUID],
					["sessionId", Types.UUID],
					["reason", Types.Variable2],
				]),
			},
		],
	])
}
