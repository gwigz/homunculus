/**
 * LandStatReply Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import * as Types from "~/network/types"
import { Packet } from "./packet"

export interface LandStatReplyData {
	requestData?: {
		reportType: number
		requestFlags: number
		totalObjectCount: number
	}
	reportData?: {
		taskLocalId: number
		taskId: string
		locationX: number
		locationY: number
		locationZ: number
		score: number
		taskName: string | Buffer
		ownerName: string | Buffer
	}[]
}

export class LandStatReply extends Packet<LandStatReplyData> {
	public static override id = 422
	public static override frequency = 0
	public static override trusted = true
	public static override compression = false

	public static override format = new Map([
		[
			"requestData",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["reportType", Types.U32],
					["requestFlags", Types.U32],
					["totalObjectCount", Types.U32],
				]),
			},
		],
		[
			"reportData",
			{
				parameters: new Map<string, Types.Type>([
					["taskLocalId", Types.U32],
					["taskId", Types.UUID],
					["locationX", Types.F32],
					["locationY", Types.F32],
					["locationZ", Types.F32],
					["score", Types.F32],
					["taskName", Types.Variable1],
					["ownerName", Types.Variable1],
				]),
			},
		],
	])
}
