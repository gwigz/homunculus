/**
 * LogDwellTime Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "../packet"
import { F32, U8, U32, UUID, Variable1 } from "../types"

export interface LogDwellTimeData {
	dwellInfo?: {
		agentId: string
		sessionId: string
		duration: number
		simName: string | Buffer
		regionX: number
		regionY: number
		avgAgentsInView: number
		avgViewerFps: number
	}
}

export const logDwellTimeMetadata = {
	id: 18,
	name: "LogDwellTime",
	frequency: 2,
	trusted: true,
	blocks: [
		{
			name: "dwellInfo",
			parameters: [
				["agentId", UUID],
				["sessionId", UUID],
				["duration", F32],
				["simName", Variable1],
				["regionX", U32],
				["regionY", U32],
				["avgAgentsInView", U8],
				["avgViewerFps", U8],
			],
		},
	],
} satisfies PacketMetadata

export const logDwellTime =
	createPacketSender<LogDwellTimeData>(logDwellTimeMetadata)

export const createLogDwellTimeDelegate =
	createPacketDelegate<LogDwellTimeData>(logDwellTimeMetadata)
