/**
 * LogFailedMoneyTransaction Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import * as Types from "../types"
import { Packet } from "./packet"

export interface LogFailedMoneyTransactionData {
	transactionData?: {
		transactionId: string | Buffer
		transactionTime: number
		transactionType: number
		sourceId: string | Buffer
		destId: string | Buffer
		flags: number
		amount: number
		simulatorIp: Types.IP
		gridX: number
		gridY: number
		failureType: number
	}
}

export class LogFailedMoneyTransaction extends Packet<LogFailedMoneyTransactionData> {
	public static override id = 20
	public static override frequency = 0
	public static override trusted = true
	public static override compression = false

	public static override format = new Map([
		[
			"transactionData",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["transactionId", Types.UUID],
					["transactionTime", Types.U32],
					["transactionType", Types.S32],
					["sourceId", Types.UUID],
					["destId", Types.UUID],
					["flags", Types.U8],
					["amount", Types.S32],
					["simulatorIp", Types.IP],
					["gridX", Types.U32],
					["gridY", Types.U32],
					["failureType", Types.U8],
				]),
			},
		],
	])
}
