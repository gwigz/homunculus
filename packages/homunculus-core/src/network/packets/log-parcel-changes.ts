/**
 * LogParcelChanges Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import * as Types from "~/network/types"
import { Packet } from "./packet"

export interface LogParcelChangesData {
	agentData?: {
		agentId?: string
	}
	regionData?: {
		regionHandle: number | bigint
	}
	parcelData?: {
		parcelId: string
		ownerId: string
		isOwnerGroup: boolean
		actualArea: number
		action: number
		transactionId: string
	}[]
}

export class LogParcelChanges extends Packet<LogParcelChangesData> {
	public static override id = 224
	public static override frequency = 0
	public static override trusted = true
	public static override compression = true

	public static override format = new Map([
		[
			"agentData",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([["agentId", Types.UUID]]),
			},
		],
		[
			"regionData",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([["regionHandle", Types.U64]]),
			},
		],
		[
			"parcelData",
			{
				parameters: new Map<string, Types.Type>([
					["parcelId", Types.UUID],
					["ownerId", Types.UUID],
					["isOwnerGroup", Types.Bool],
					["actualArea", Types.S32],
					["action", Types.S8],
					["transactionId", Types.UUID],
				]),
			},
		],
	])
}
