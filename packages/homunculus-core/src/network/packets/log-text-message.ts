/**
 * LogTextMessage Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import { F64, U32, UUID, Variable2 } from "../types"
import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "./packet"

export interface LogTextMessageData {
	dataBlock?: {
		fromAgentId: string
		toAgentId: string
		globalX: number
		globalY: number
		time: number
		message: string | Buffer
	}[]
}

export const logTextMessageMetadata = {
	id: 391,
	name: "LogTextMessage",
	frequency: 2,
	trusted: true,
	compression: true,
	blocks: [
		{
			name: "dataBlock",
			parameters: [
				["fromAgentId", UUID],
				["toAgentId", UUID],
				["globalX", F64],
				["globalY", F64],
				["time", U32],
				["message", Variable2],
			],
			multiple: true,
		},
	],
} satisfies PacketMetadata

export const logTextMessage = createPacketSender<LogTextMessageData>(
	logTextMessageMetadata,
)

export const createLogTextMessageDelegate =
	createPacketDelegate<LogTextMessageData>(logTextMessageMetadata)
