/**
 * ModifyLand Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import * as Types from "~/network/types"
import { Packet } from "./packet"

export interface ModifyLandData {
	agentData?: {
		agentId?: string
		sessionId?: string
	}
	modifyBlock?: {
		action: number
		brushSize: number
		seconds: number
		height: number
	}
	parcelData?: {
		localId: number
		west: number
		south: number
		east: number
		north: number
	}[]
	modifyBlockExtended?: {
		brushSize: number
	}[]
}

export class ModifyLand extends Packet<ModifyLandData> {
	public static override id = 124
	public static override frequency = 0
	public static override trusted = false
	public static override compression = true

	public static override format = new Map([
		[
			"agentData",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["agentId", Types.UUID],
					["sessionId", Types.UUID],
				]),
			},
		],
		[
			"modifyBlock",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["action", Types.U8],
					["brushSize", Types.U8],
					["seconds", Types.F32],
					["height", Types.F32],
				]),
			},
		],
		[
			"parcelData",
			{
				parameters: new Map<string, Types.Type>([
					["localId", Types.S32],
					["west", Types.F32],
					["south", Types.F32],
					["east", Types.F32],
					["north", Types.F32],
				]),
			},
		],
		[
			"modifyBlockExtended",
			{
				parameters: new Map<string, Types.Type>([["brushSize", Types.F32]]),
			},
		],
	])
}
