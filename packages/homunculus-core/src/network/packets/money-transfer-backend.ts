/**
 * MoneyTransferBackend Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "../packet"
import { S32, U8, U32, UUID, Variable1 } from "../types"

export interface MoneyTransferBackendData {
	moneyData?: {
		transactionId: string
		transactionTime: number
		sourceId: string
		destId: string
		flags: number
		amount: number
		aggregatePermNextOwner: number
		aggregatePermInventory: number
		transactionType: number
		regionId: string
		gridX: number
		gridY: number
		description: string | Buffer
	}
}

export const moneyTransferBackendMetadata = {
	id: 312,
	name: "MoneyTransferBackend",
	frequency: 2,
	trusted: true,
	compression: true,
	blocks: [
		{
			name: "moneyData",
			parameters: [
				["transactionId", UUID],
				["transactionTime", U32],
				["sourceId", UUID],
				["destId", UUID],
				["flags", U8],
				["amount", S32],
				["aggregatePermNextOwner", U8],
				["aggregatePermInventory", U8],
				["transactionType", S32],
				["regionId", UUID],
				["gridX", U32],
				["gridY", U32],
				["description", Variable1],
			],
		},
	],
} satisfies PacketMetadata

export const moneyTransferBackend =
	createPacketSender<MoneyTransferBackendData>(moneyTransferBackendMetadata)

export const createMoneyTransferBackendDelegate =
	createPacketDelegate<MoneyTransferBackendData>(moneyTransferBackendMetadata)
