/**
 * ObjectDuplicateOnRay Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import * as Types from "../types"
import { Packet } from "./packet"

export interface ObjectDuplicateOnRayData {
	agentData: {
		agentId?: string | Buffer
		sessionId?: string | Buffer
		groupId: string | Buffer
		rayStart: Types.Vector3
		rayEnd: Types.Vector3
		bypassRaycast: boolean
		rayEndIsIntersection: boolean
		copyCenters: boolean
		copyRotates: boolean
		rayTargetId: string | Buffer
		duplicateFlags: number
	}
	objectData?: {
		objectLocalId: number
	}[]
}

export class ObjectDuplicateOnRay extends Packet<ObjectDuplicateOnRayData> {
	public static override id = 91
	public static override frequency = 0
	public static override trusted = false
	public static override compression = true

	public static override format = new Map([
		[
			"agentData",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["agentId", Types.UUID],
					["sessionId", Types.UUID],
					["groupId", Types.UUID],
					["rayStart", Types.Vector3],
					["rayEnd", Types.Vector3],
					["bypassRaycast", Types.Bool],
					["rayEndIsIntersection", Types.Bool],
					["copyCenters", Types.Bool],
					["copyRotates", Types.Bool],
					["rayTargetId", Types.UUID],
					["duplicateFlags", Types.U32],
				]),
			},
		],
		[
			"objectData",
			{
				parameters: new Map<string, Types.Type>([["objectLocalId", Types.U32]]),
			},
		],
	])
}
