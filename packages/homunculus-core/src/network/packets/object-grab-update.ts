/**
 * ObjectGrabUpdate Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "../packet"
import { S32, U32, UUID, Vector3 } from "../types"

export interface ObjectGrabUpdateData {
	agentData?: {
		agentId?: string
		sessionId?: string
	}
	objectData?: {
		objectId: string
		grabOffsetInitial: Vector3
		grabPosition: Vector3
		timeSinceLast: number
	}
	surfaceInfo?: {
		uvCoord: Vector3
		stCoord: Vector3
		faceIndex: number
		position: Vector3
		normal: Vector3
		binormal: Vector3
	}[]
}

export const objectGrabUpdateMetadata = {
	id: 118,
	name: "ObjectGrabUpdate",
	frequency: 2,
	compression: true,
	blocks: [
		{
			name: "agentData",
			parameters: [
				["agentId", UUID],
				["sessionId", UUID],
			],
		},
		{
			name: "objectData",
			parameters: [
				["objectId", UUID],
				["grabOffsetInitial", Vector3],
				["grabPosition", Vector3],
				["timeSinceLast", U32],
			],
		},
		{
			name: "surfaceInfo",
			parameters: [
				["uvCoord", Vector3],
				["stCoord", Vector3],
				["faceIndex", S32],
				["position", Vector3],
				["normal", Vector3],
				["binormal", Vector3],
			],
			multiple: true,
		},
	],
} satisfies PacketMetadata

export const objectGrabUpdate = createPacketSender<ObjectGrabUpdateData>(
	objectGrabUpdateMetadata,
)

export const createObjectGrabUpdateDelegate =
	createPacketDelegate<ObjectGrabUpdateData>(objectGrabUpdateMetadata)
