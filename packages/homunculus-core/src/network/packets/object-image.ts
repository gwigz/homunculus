/**
 * ObjectImage Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "../packet"
import { U32, UUID, Variable1, Variable2 } from "../types"

export interface ObjectImageData {
	agentData?: {
		agentId?: string
		sessionId?: string
	}
	objectData?: {
		objectLocalId: number
		mediaUrl: string | Buffer
		textureEntry: string | Buffer
	}[]
}

export const objectImageMetadata = {
	id: 96,
	name: "ObjectImage",
	frequency: 2,
	compression: true,
	blocks: [
		{
			name: "agentData",
			parameters: [
				["agentId", UUID],
				["sessionId", UUID],
			],
		},
		{
			name: "objectData",
			parameters: [
				["objectLocalId", U32],
				["mediaUrl", Variable1],
				["textureEntry", Variable2],
			],
			multiple: true,
		},
	],
} satisfies PacketMetadata

export const objectImage =
	createPacketSender<ObjectImageData>(objectImageMetadata)

export const createObjectImageDelegate =
	createPacketDelegate<ObjectImageData>(objectImageMetadata)
