/**
 * ObjectPermissions Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "../packet"
import { Bool, U8, U32, UUID } from "../types"

export interface ObjectPermissionsData {
	agentData?: {
		agentId?: string
		sessionId?: string
	}
	headerData?: {
		override: boolean
	}
	objectData?: {
		objectLocalId: number
		field: number
		set: number
		mask: number
	}[]
}

export const objectPermissionsMetadata = {
	id: 105,
	name: "ObjectPermissions",
	frequency: 2,
	compression: true,
	blocks: [
		{
			name: "agentData",
			parameters: [
				["agentId", UUID],
				["sessionId", UUID],
			],
		},
		{
			name: "headerData",
			parameters: [["override", Bool]],
		},
		{
			name: "objectData",
			parameters: [
				["objectLocalId", U32],
				["field", U8],
				["set", U8],
				["mask", U32],
			],
			multiple: true,
		},
	],
} satisfies PacketMetadata

export const objectPermissions = createPacketSender<ObjectPermissionsData>(
	objectPermissionsMetadata,
)

export const createObjectPermissionsDelegate =
	createPacketDelegate<ObjectPermissionsData>(objectPermissionsMetadata)
