/**
 * ObjectUpdateCompressed Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import * as Types from "../types"
import { Packet } from "./packet"

export interface ObjectUpdateCompressedData {
	regionData?: {
		regionHandle: number | bigint
		timeDilation: number
	}
	objectData?: {
		updateFlags: number
		data: string | Buffer
	}[]
}

export class ObjectUpdateCompressed extends Packet<ObjectUpdateCompressedData> {
	public static override id = 13
	public static override frequency = 2
	public static override trusted = true
	public static override compression = false

	public static override format = new Map([
		[
			"regionData",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["regionHandle", Types.U64],
					["timeDilation", Types.U16],
				]),
			},
		],
		[
			"objectData",
			{
				parameters: new Map<string, Types.Type>([
					["updateFlags", Types.U32],
					["data", Types.Variable2],
				]),
			},
		],
	])
}
