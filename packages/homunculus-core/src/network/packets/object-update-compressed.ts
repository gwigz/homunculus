/**
 * ObjectUpdateCompressed Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import { U16, U32, U64, Variable2 } from "../types"
import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "./packet"

export interface ObjectUpdateCompressedData {
	regionData?: {
		regionHandle: number | bigint
		timeDilation: number
	}
	objectData?: {
		updateFlags: number
		data: string | Buffer
	}[]
}

export const objectUpdateCompressedMetadata = {
	id: 13,
	name: "ObjectUpdateCompressed",
	trusted: true,
	blocks: [
		{
			name: "regionData",
			parameters: [
				["regionHandle", U64],
				["timeDilation", U16],
			],
		},
		{
			name: "objectData",
			parameters: [
				["updateFlags", U32],
				["data", Variable2],
			],
			multiple: true,
		},
	],
} satisfies PacketMetadata

export const objectUpdateCompressed =
	createPacketSender<ObjectUpdateCompressedData>(objectUpdateCompressedMetadata)

export const createObjectUpdateCompressedDelegate =
	createPacketDelegate<ObjectUpdateCompressedData>(
		objectUpdateCompressedMetadata,
	)
