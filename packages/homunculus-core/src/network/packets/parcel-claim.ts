/**
 * ParcelClaim Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import { Bool, F32, UUID } from "../types"
import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "./packet"

export interface ParcelClaimData {
	agentData?: {
		agentId?: string
		sessionId?: string
	}
	data?: {
		groupId: string
		isGroupOwned: boolean
		final: boolean
	}
	parcelData?: {
		west: number
		south: number
		east: number
		north: number
	}[]
}

export const parcelClaimMetadata = {
	id: 209,
	name: "ParcelClaim",
	frequency: 2,
	compression: true,
	blocks: [
		{
			name: "agentData",
			parameters: [
				["agentId", UUID],
				["sessionId", UUID],
			],
		},
		{
			name: "data",
			parameters: [
				["groupId", UUID],
				["isGroupOwned", Bool],
				["final", Bool],
			],
		},
		{
			name: "parcelData",
			parameters: [
				["west", F32],
				["south", F32],
				["east", F32],
				["north", F32],
			],
			multiple: true,
		},
	],
} satisfies PacketMetadata

export const parcelClaim =
	createPacketSender<ParcelClaimData>(parcelClaimMetadata)

export const createParcelClaimDelegate =
	createPacketDelegate<ParcelClaimData>(parcelClaimMetadata)
