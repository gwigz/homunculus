/**
 * ParcelInfoReply Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import * as Types from "~/network/types"
import { Packet } from "./packet"

export interface ParcelInfoReplyData {
	agentData?: {
		agentId?: string
	}
	data?: {
		parcelId: string
		ownerId: string
		name: string | Buffer
		desc: string | Buffer
		actualArea: number
		billableArea: number
		flags: number
		globalX: number
		globalY: number
		globalZ: number
		simName: string | Buffer
		snapshotId: string
		dwell: number
		salePrice: number
		auctionId: number
	}
}

export class ParcelInfoReply extends Packet<ParcelInfoReplyData> {
	public static override id = 55
	public static override frequency = 0
	public static override trusted = true
	public static override compression = true

	public static override format = new Map([
		[
			"agentData",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([["agentId", Types.UUID]]),
			},
		],
		[
			"data",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["parcelId", Types.UUID],
					["ownerId", Types.UUID],
					["name", Types.Variable1],
					["desc", Types.Variable1],
					["actualArea", Types.S32],
					["billableArea", Types.S32],
					["flags", Types.U8],
					["globalX", Types.F32],
					["globalY", Types.F32],
					["globalZ", Types.F32],
					["simName", Types.Variable1],
					["snapshotId", Types.UUID],
					["dwell", Types.F32],
					["salePrice", Types.S32],
					["auctionId", Types.S32],
				]),
			},
		],
	])
}
