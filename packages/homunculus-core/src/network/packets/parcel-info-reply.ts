/**
 * ParcelInfoReply Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "../packet"
import { F32, S32, U8, UUID, Variable1 } from "../types"

export interface ParcelInfoReplyData {
	agentData?: {
		agentId?: string
	}
	data?: {
		parcelId: string
		ownerId: string
		name: string | Buffer
		desc: string | Buffer
		actualArea: number
		billableArea: number
		flags: number
		globalX: number
		globalY: number
		globalZ: number
		simName: string | Buffer
		snapshotId: string
		dwell: number
		salePrice: number
		auctionId: number
	}
}

export const parcelInfoReplyMetadata = {
	id: 55,
	name: "ParcelInfoReply",
	frequency: 2,
	trusted: true,
	compression: true,
	blocks: [
		{
			name: "agentData",
			parameters: [["agentId", UUID]],
		},
		{
			name: "data",
			parameters: [
				["parcelId", UUID],
				["ownerId", UUID],
				["name", Variable1],
				["desc", Variable1],
				["actualArea", S32],
				["billableArea", S32],
				["flags", U8],
				["globalX", F32],
				["globalY", F32],
				["globalZ", F32],
				["simName", Variable1],
				["snapshotId", UUID],
				["dwell", F32],
				["salePrice", S32],
				["auctionId", S32],
			],
		},
	],
} satisfies PacketMetadata

export const parcelInfoReply = createPacketSender<ParcelInfoReplyData>(
	parcelInfoReplyMetadata,
)

export const createParcelInfoReplyDelegate =
	createPacketDelegate<ParcelInfoReplyData>(parcelInfoReplyMetadata)
