/**
 * ParcelMediaUpdate Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "../packet"
import { S32, U8, UUID, Variable1 } from "../types"

export interface ParcelMediaUpdateData {
	dataBlock?: {
		mediaUrl: string | Buffer
		mediaId: string
		mediaAutoScale: number
	}
	dataBlockExtended?: {
		mediaType: string | Buffer
		mediaDesc: string | Buffer
		mediaWidth: number
		mediaHeight: number
		mediaLoop: number
	}
}

export const parcelMediaUpdateMetadata = {
	id: 420,
	name: "ParcelMediaUpdate",
	frequency: 2,
	trusted: true,
	blocks: [
		{
			name: "dataBlock",
			parameters: [
				["mediaUrl", Variable1],
				["mediaId", UUID],
				["mediaAutoScale", U8],
			],
		},
		{
			name: "dataBlockExtended",
			parameters: [
				["mediaType", Variable1],
				["mediaDesc", Variable1],
				["mediaWidth", S32],
				["mediaHeight", S32],
				["mediaLoop", U8],
			],
		},
	],
} satisfies PacketMetadata

export const parcelMediaUpdate = createPacketSender<ParcelMediaUpdateData>(
	parcelMediaUpdateMetadata,
)

export const createParcelMediaUpdateDelegate =
	createPacketDelegate<ParcelMediaUpdateData>(parcelMediaUpdateMetadata)
