/**
 * ParcelPropertiesUpdate Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "../packet"
import { F32, S32, U8, U32, UUID, Variable1, Vector3 } from "../types"

export interface ParcelPropertiesUpdateData {
	agentData?: {
		agentId?: string
		sessionId?: string
	}
	parcelData?: {
		localId: number
		flags: number
		parcelFlags: number
		salePrice: number
		name: string | Buffer
		desc: string | Buffer
		musicUrl: string | Buffer
		mediaUrl: string | Buffer
		mediaId: string
		mediaAutoScale: number
		groupId: string
		passPrice: number
		passHours: number
		category: number
		authBuyerId: string
		snapshotId: string
		userLocation: Vector3
		userLookAt: Vector3
		landingType: number
	}
}

export const parcelPropertiesUpdateMetadata = {
	id: 198,
	name: "ParcelPropertiesUpdate",
	frequency: 2,
	compression: true,
	blocks: [
		{
			name: "agentData",
			parameters: [
				["agentId", UUID],
				["sessionId", UUID],
			],
		},
		{
			name: "parcelData",
			parameters: [
				["localId", S32],
				["flags", U32],
				["parcelFlags", U32],
				["salePrice", S32],
				["name", Variable1],
				["desc", Variable1],
				["musicUrl", Variable1],
				["mediaUrl", Variable1],
				["mediaId", UUID],
				["mediaAutoScale", U8],
				["groupId", UUID],
				["passPrice", S32],
				["passHours", F32],
				["category", U8],
				["authBuyerId", UUID],
				["snapshotId", UUID],
				["userLocation", Vector3],
				["userLookAt", Vector3],
				["landingType", U8],
			],
		},
	],
} satisfies PacketMetadata

export const parcelPropertiesUpdate =
	createPacketSender<ParcelPropertiesUpdateData>(parcelPropertiesUpdateMetadata)

export const createParcelPropertiesUpdateDelegate =
	createPacketDelegate<ParcelPropertiesUpdateData>(
		parcelPropertiesUpdateMetadata,
	)
