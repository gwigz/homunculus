/**
 * ParcelPropertiesUpdate Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import * as Types from "~/network/types"
import { Packet } from "./packet"

export interface ParcelPropertiesUpdateData {
	agentData?: {
		agentId?: string
		sessionId?: string
	}
	parcelData?: {
		localId: number
		flags: number
		parcelFlags: number
		salePrice: number
		name: string | Buffer
		desc: string | Buffer
		musicUrl: string | Buffer
		mediaUrl: string | Buffer
		mediaId: string
		mediaAutoScale: number
		groupId: string
		passPrice: number
		passHours: number
		category: number
		authBuyerId: string
		snapshotId: string
		userLocation: Types.Vector3
		userLookAt: Types.Vector3
		landingType: number
	}
}

export class ParcelPropertiesUpdate extends Packet<ParcelPropertiesUpdateData> {
	public static override id = 198
	public static override frequency = 0
	public static override trusted = false
	public static override compression = true

	public static override format = new Map([
		[
			"agentData",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["agentId", Types.UUID],
					["sessionId", Types.UUID],
				]),
			},
		],
		[
			"parcelData",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["localId", Types.S32],
					["flags", Types.U32],
					["parcelFlags", Types.U32],
					["salePrice", Types.S32],
					["name", Types.Variable1],
					["desc", Types.Variable1],
					["musicUrl", Types.Variable1],
					["mediaUrl", Types.Variable1],
					["mediaId", Types.UUID],
					["mediaAutoScale", Types.U8],
					["groupId", Types.UUID],
					["passPrice", Types.S32],
					["passHours", Types.F32],
					["category", Types.U8],
					["authBuyerId", Types.UUID],
					["snapshotId", Types.UUID],
					["userLocation", Types.Vector3],
					["userLookAt", Types.Vector3],
					["landingType", Types.U8],
				]),
			},
		],
	])
}
