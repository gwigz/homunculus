/**
 * PickInfoUpdate Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import { Bool, S32, UUID, Variable1, Variable2, Vector3D } from "../types"
import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "./packet"

export interface PickInfoUpdateData {
	agentData?: {
		agentId?: string
		sessionId?: string
	}
	data?: {
		pickId: string
		creatorId: string
		topPick: boolean
		parcelId: string
		name: string | Buffer
		desc: string | Buffer
		snapshotId: string
		posGlobal: Vector3D
		sortOrder: number
		enabled: boolean
	}
}

export const pickInfoUpdateMetadata = {
	id: 185,
	name: "PickInfoUpdate",
	frequency: 2,
	blocks: [
		{
			name: "agentData",
			parameters: [
				["agentId", UUID],
				["sessionId", UUID],
			],
		},
		{
			name: "data",
			parameters: [
				["pickId", UUID],
				["creatorId", UUID],
				["topPick", Bool],
				["parcelId", UUID],
				["name", Variable1],
				["desc", Variable2],
				["snapshotId", UUID],
				["posGlobal", Vector3D],
				["sortOrder", S32],
				["enabled", Bool],
			],
		},
	],
} satisfies PacketMetadata

export const pickInfoUpdate = createPacketSender<PickInfoUpdateData>(
	pickInfoUpdateMetadata,
)

export const createPickInfoUpdateDelegate =
	createPacketDelegate<PickInfoUpdateData>(pickInfoUpdateMetadata)
