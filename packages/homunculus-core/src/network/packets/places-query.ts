/**
 * PlacesQuery Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import { S8, U32, UUID, Variable1 } from "../types"
import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "./packet"

export interface PlacesQueryData {
	agentData: {
		agentId?: string
		sessionId?: string
		queryId: string
	}
	transactionData?: {
		transactionId: string
	}
	queryData?: {
		queryText: string | Buffer
		queryFlags: number
		category: number
		simName: string | Buffer
	}
}

export const placesQueryMetadata = {
	id: 29,
	name: "PlacesQuery",
	frequency: 2,
	compression: true,
	blocks: [
		{
			name: "agentData",
			parameters: [
				["agentId", UUID],
				["sessionId", UUID],
				["queryId", UUID],
			],
		},
		{
			name: "transactionData",
			parameters: [["transactionId", UUID]],
		},
		{
			name: "queryData",
			parameters: [
				["queryText", Variable1],
				["queryFlags", U32],
				["category", S8],
				["simName", Variable1],
			],
		},
	],
} satisfies PacketMetadata

export const placesQuery =
	createPacketSender<PlacesQueryData>(placesQueryMetadata)

export const createPlacesQueryDelegate =
	createPacketDelegate<PlacesQueryData>(placesQueryMetadata)
