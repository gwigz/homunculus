/**
 * RegionPresenceResponse Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import * as Types from "~/network/types"
import { Packet } from "./packet"

export interface RegionPresenceResponseData {
	regionData?: {
		regionId: string
		regionHandle: number | bigint
		internalRegionIp: Types.IP
		externalRegionIp: Types.IP
		regionPort: Types.Port
		validUntil: number
		message: string | Buffer
	}[]
}

export class RegionPresenceResponse extends Packet<RegionPresenceResponseData> {
	public static override id = 16
	public static override frequency = 0
	public static override trusted = true
	public static override compression = true

	public static override format = new Map([
		[
			"regionData",
			{
				parameters: new Map<string, Types.Type>([
					["regionId", Types.UUID],
					["regionHandle", Types.U64],
					["internalRegionIp", Types.IP],
					["externalRegionIp", Types.IP],
					["regionPort", Types.Port],
					["validUntil", Types.F64],
					["message", Types.Variable1],
				]),
			},
		],
	])
}
