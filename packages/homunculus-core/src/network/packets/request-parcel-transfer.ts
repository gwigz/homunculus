/**
 * RequestParcelTransfer Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import * as Types from "~/network/types"
import { Packet } from "./packet"

export interface RequestParcelTransferData {
	data?: {
		transactionId: string
		transactionTime: number
		sourceId: string
		destId: string
		ownerId: string
		flags: number
		transactionType: number
		amount: number
		billableArea: number
		actualArea: number
		final: boolean
	}
	regionData?: {
		regionId: string
		gridX: number
		gridY: number
	}
}

export class RequestParcelTransfer extends Packet<RequestParcelTransferData> {
	public static override id = 220
	public static override frequency = 0
	public static override trusted = true
	public static override compression = true

	public static override format = new Map([
		[
			"data",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["transactionId", Types.UUID],
					["transactionTime", Types.U32],
					["sourceId", Types.UUID],
					["destId", Types.UUID],
					["ownerId", Types.UUID],
					["flags", Types.U8],
					["transactionType", Types.S32],
					["amount", Types.S32],
					["billableArea", Types.S32],
					["actualArea", Types.S32],
					["final", Types.Bool],
				]),
			},
		],
		[
			"regionData",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["regionId", Types.UUID],
					["gridX", Types.U32],
					["gridY", Types.U32],
				]),
			},
		],
	])
}
