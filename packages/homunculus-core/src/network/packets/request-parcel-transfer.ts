/**
 * RequestParcelTransfer Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "../packet"
import { Bool, S32, U8, U32, UUID } from "../types"

export interface RequestParcelTransferData {
	data?: {
		transactionId: string
		transactionTime: number
		sourceId: string
		destId: string
		ownerId: string
		flags: number
		transactionType: number
		amount: number
		billableArea: number
		actualArea: number
		final: boolean
	}
	regionData?: {
		regionId: string
		gridX: number
		gridY: number
	}
}

export const requestParcelTransferMetadata = {
	id: 220,
	name: "RequestParcelTransfer",
	frequency: 2,
	trusted: true,
	compression: true,
	blocks: [
		{
			name: "data",
			parameters: [
				["transactionId", UUID],
				["transactionTime", U32],
				["sourceId", UUID],
				["destId", UUID],
				["ownerId", UUID],
				["flags", U8],
				["transactionType", S32],
				["amount", S32],
				["billableArea", S32],
				["actualArea", S32],
				["final", Bool],
			],
		},
		{
			name: "regionData",
			parameters: [
				["regionId", UUID],
				["gridX", U32],
				["gridY", U32],
			],
		},
	],
} satisfies PacketMetadata

export const requestParcelTransfer =
	createPacketSender<RequestParcelTransferData>(requestParcelTransferMetadata)

export const createRequestParcelTransferDelegate =
	createPacketDelegate<RequestParcelTransferData>(requestParcelTransferMetadata)
