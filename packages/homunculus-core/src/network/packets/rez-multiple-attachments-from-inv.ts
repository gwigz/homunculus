/**
 * RezMultipleAttachmentsFromInv Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "../packet"
import { Bool, U8, U32, UUID, Variable1 } from "../types"

export interface RezMultipleAttachmentsFromInvData {
	agentData?: {
		agentId?: string
		sessionId?: string
	}
	headerData?: {
		compoundMsgId: string
		totalObjects: number
		firstDetachAll: boolean
	}
	objectData?: {
		itemId: string
		ownerId: string
		attachmentPt: number
		itemFlags: number
		groupMask: number
		everyoneMask: number
		nextOwnerMask: number
		name: string | Buffer
		description: string | Buffer
	}[]
}

export const rezMultipleAttachmentsFromInvMetadata = {
	id: 396,
	name: "RezMultipleAttachmentsFromInv",
	frequency: 2,
	compression: true,
	blocks: [
		{
			name: "agentData",
			parameters: [
				["agentId", UUID],
				["sessionId", UUID],
			],
		},
		{
			name: "headerData",
			parameters: [
				["compoundMsgId", UUID],
				["totalObjects", U8],
				["firstDetachAll", Bool],
			],
		},
		{
			name: "objectData",
			parameters: [
				["itemId", UUID],
				["ownerId", UUID],
				["attachmentPt", U8],
				["itemFlags", U32],
				["groupMask", U32],
				["everyoneMask", U32],
				["nextOwnerMask", U32],
				["name", Variable1],
				["description", Variable1],
			],
			multiple: true,
		},
	],
} satisfies PacketMetadata

export const rezMultipleAttachmentsFromInv =
	createPacketSender<RezMultipleAttachmentsFromInvData>(
		rezMultipleAttachmentsFromInvMetadata,
	)

export const createRezMultipleAttachmentsFromInvDelegate =
	createPacketDelegate<RezMultipleAttachmentsFromInvData>(
		rezMultipleAttachmentsFromInvMetadata,
	)
