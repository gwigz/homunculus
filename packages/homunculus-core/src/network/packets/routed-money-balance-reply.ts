/**
 * RoutedMoneyBalanceReply Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import { Bool, IP, Port, S32, UUID, Variable1 } from "../types"
import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "./packet"

export interface RoutedMoneyBalanceReplyData {
	targetBlock?: {
		targetIp: IP
		targetPort: Port
	}
	moneyData?: {
		agentId: string
		transactionId: string
		transactionSuccess: boolean
		moneyBalance: number
		squareMetersCredit: number
		squareMetersCommitted: number
		description: string | Buffer
	}
	transactionInfo?: {
		transactionType: number
		sourceId: string
		isSourceGroup: boolean
		destId: string
		isDestGroup: boolean
		amount: number
		itemDescription: string | Buffer
	}
}

export const routedMoneyBalanceReplyMetadata = {
	id: 315,
	name: "RoutedMoneyBalanceReply",
	frequency: 2,
	trusted: true,
	compression: true,
	blocks: [
		{
			name: "targetBlock",
			parameters: [
				["targetIp", IP],
				["targetPort", Port],
			],
		},
		{
			name: "moneyData",
			parameters: [
				["agentId", UUID],
				["transactionId", UUID],
				["transactionSuccess", Bool],
				["moneyBalance", S32],
				["squareMetersCredit", S32],
				["squareMetersCommitted", S32],
				["description", Variable1],
			],
		},
		{
			name: "transactionInfo",
			parameters: [
				["transactionType", S32],
				["sourceId", UUID],
				["isSourceGroup", Bool],
				["destId", UUID],
				["isDestGroup", Bool],
				["amount", S32],
				["itemDescription", Variable1],
			],
		},
	],
} satisfies PacketMetadata

export const routedMoneyBalanceReply =
	createPacketSender<RoutedMoneyBalanceReplyData>(
		routedMoneyBalanceReplyMetadata,
	)

export const createRoutedMoneyBalanceReplyDelegate =
	createPacketDelegate<RoutedMoneyBalanceReplyData>(
		routedMoneyBalanceReplyMetadata,
	)
