/**
 * ScriptDialog Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import { S32, UUID, Variable1, Variable2 } from "../types"
import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "./packet"

export interface ScriptDialogData {
	data?: {
		objectId: string
		firstName: string | Buffer
		lastName: string | Buffer
		objectName: string | Buffer
		message: string | Buffer
		chatChannel: number
		imageId: string
	}
	buttons?: {
		buttonLabel: string | Buffer
	}[]
	ownerData?: {
		ownerId: string
	}[]
}

export const scriptDialogMetadata = {
	id: 190,
	name: "ScriptDialog",
	frequency: 2,
	trusted: true,
	compression: true,
	blocks: [
		{
			name: "data",
			parameters: [
				["objectId", UUID],
				["firstName", Variable1],
				["lastName", Variable1],
				["objectName", Variable1],
				["message", Variable2],
				["chatChannel", S32],
				["imageId", UUID],
			],
		},
		{
			name: "buttons",
			parameters: [["buttonLabel", Variable1]],
			multiple: true,
		},
		{
			name: "ownerData",
			parameters: [["ownerId", UUID]],
			multiple: true,
		},
	],
} satisfies PacketMetadata

export const scriptDialog =
	createPacketSender<ScriptDialogData>(scriptDialogMetadata)

export const createScriptDialogDelegate =
	createPacketDelegate<ScriptDialogData>(scriptDialogMetadata)
