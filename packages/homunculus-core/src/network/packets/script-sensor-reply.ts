/**
 * ScriptSensorReply Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import * as Types from "../types"
import { Packet } from "./packet"

export interface ScriptSensorReplyData {
	requester?: {
		sourceId: string
	}
	sensedData?: {
		objectId: string
		ownerId: string
		groupId: string
		position: Types.Vector3
		velocity: Types.Vector3
		rotation: Types.Quaternion
		name: string | Buffer
		type: number
		range: number
	}[]
}

export class ScriptSensorReply extends Packet<ScriptSensorReplyData> {
	public static override id = 248
	public static override frequency = 0
	public static override trusted = true
	public static override compression = true

	public static override format = new Map([
		[
			"requester",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([["sourceId", Types.UUID]]),
			},
		],
		[
			"sensedData",
			{
				parameters: new Map<string, Types.Type>([
					["objectId", Types.UUID],
					["ownerId", Types.UUID],
					["groupId", Types.UUID],
					["position", Types.Vector3],
					["velocity", Types.Vector3],
					["rotation", Types.Quaternion],
					["name", Types.Variable1],
					["type", Types.S32],
					["range", Types.F32],
				]),
			},
		],
	])
}
