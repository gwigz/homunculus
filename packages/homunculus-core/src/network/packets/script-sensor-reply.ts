/**
 * ScriptSensorReply Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import { F32, Quaternion, S32, UUID, Variable1, Vector3 } from "../types"
import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "./packet"

export interface ScriptSensorReplyData {
	requester?: {
		sourceId: string
	}
	sensedData?: {
		objectId: string
		ownerId: string
		groupId: string
		position: Vector3
		velocity: Vector3
		rotation: Quaternion
		name: string | Buffer
		type: number
		range: number
	}[]
}

export const scriptSensorReplyMetadata = {
	id: 248,
	name: "ScriptSensorReply",
	frequency: 2,
	trusted: true,
	compression: true,
	blocks: [
		{
			name: "requester",
			parameters: [["sourceId", UUID]],
		},
		{
			name: "sensedData",
			parameters: [
				["objectId", UUID],
				["ownerId", UUID],
				["groupId", UUID],
				["position", Vector3],
				["velocity", Vector3],
				["rotation", Quaternion],
				["name", Variable1],
				["type", S32],
				["range", F32],
			],
			multiple: true,
		},
	],
} satisfies PacketMetadata

export const scriptSensorReply = createPacketSender<ScriptSensorReplyData>(
	scriptSensorReplyMetadata,
)

export const createScriptSensorReplyDelegate =
	createPacketDelegate<ScriptSensorReplyData>(scriptSensorReplyMetadata)
