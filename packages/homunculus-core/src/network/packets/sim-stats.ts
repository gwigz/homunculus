/**
 * SimStats Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import * as Types from "~/network/types"
import { Packet } from "./packet"

export interface SimStatsData {
	region?: {
		regionX: number
		regionY: number
		regionFlags: number
		objectCapacity: number
	}
	stat?: {
		statId: number
		statValue: number
	}[]
	pidStat?: {
		pid: number
	}
	regionInfo?: {
		regionFlagsExtended: number | bigint
	}[]
}

export class SimStats extends Packet<SimStatsData> {
	public static override id = 140
	public static override frequency = 0
	public static override trusted = true
	public static override compression = false

	public static override format = new Map([
		[
			"region",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["regionX", Types.U32],
					["regionY", Types.U32],
					["regionFlags", Types.U32],
					["objectCapacity", Types.U32],
				]),
			},
		],
		[
			"stat",
			{
				parameters: new Map<string, Types.Type>([
					["statId", Types.U32],
					["statValue", Types.F32],
				]),
			},
		],
		[
			"pidStat",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([["pid", Types.S32]]),
			},
		],
		[
			"regionInfo",
			{
				parameters: new Map<string, Types.Type>([
					["regionFlagsExtended", Types.U64],
				]),
			},
		],
	])
}
