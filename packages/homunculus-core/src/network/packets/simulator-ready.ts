/**
 * SimulatorReady Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import * as Types from "../types"
import { Packet } from "./packet"

export interface SimulatorReadyData {
	simulatorBlock?: {
		simName: string | Buffer
		simAccess: number
		regionFlags: number
		regionId: string | Buffer
		estateId: number
		parentEstateId: number
	}
	telehubBlock?: {
		hasTelehub: boolean
		telehubPos: Types.Vector3
	}
}

export class SimulatorReady extends Packet<SimulatorReadyData> {
	public static override id = 9
	public static override frequency = 0
	public static override trusted = true
	public static override compression = true

	public static override format = new Map([
		[
			"simulatorBlock",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["simName", Types.Variable1],
					["simAccess", Types.U8],
					["regionFlags", Types.U32],
					["regionId", Types.UUID],
					["estateId", Types.U32],
					["parentEstateId", Types.U32],
				]),
			},
		],
		[
			"telehubBlock",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["hasTelehub", Types.Bool],
					["telehubPos", Types.Vector3],
				]),
			},
		],
	])
}
