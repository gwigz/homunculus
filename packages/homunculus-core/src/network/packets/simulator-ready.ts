/**
 * SimulatorReady Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "../packet"
import { Bool, U8, U32, UUID, Variable1, Vector3 } from "../types"

export interface SimulatorReadyData {
	simulatorBlock?: {
		simName: string | Buffer
		simAccess: number
		regionFlags: number
		regionId: string
		estateId: number
		parentEstateId: number
	}
	telehubBlock?: {
		hasTelehub: boolean
		telehubPos: Vector3
	}
}

export const simulatorReadyMetadata = {
	id: 9,
	name: "SimulatorReady",
	frequency: 2,
	trusted: true,
	compression: true,
	blocks: [
		{
			name: "simulatorBlock",
			parameters: [
				["simName", Variable1],
				["simAccess", U8],
				["regionFlags", U32],
				["regionId", UUID],
				["estateId", U32],
				["parentEstateId", U32],
			],
		},
		{
			name: "telehubBlock",
			parameters: [
				["hasTelehub", Bool],
				["telehubPos", Vector3],
			],
		},
	],
} satisfies PacketMetadata

export const simulatorReady = createPacketSender<SimulatorReadyData>(
	simulatorReadyMetadata,
)

export const createSimulatorReadyDelegate =
	createPacketDelegate<SimulatorReadyData>(simulatorReadyMetadata)
