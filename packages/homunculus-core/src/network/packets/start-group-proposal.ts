/**
 * StartGroupProposal Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import { F32, S32, UUID, Variable1 } from "../types"
import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "./packet"

export interface StartGroupProposalData {
	agentData?: {
		agentId?: string
		sessionId?: string
	}
	proposalData?: {
		groupId: string
		quorum: number
		majority: number
		duration: number
		proposalText: string | Buffer
	}
}

export const startGroupProposalMetadata = {
	id: 363,
	name: "StartGroupProposal",
	frequency: 2,
	compression: true,
	blocks: [
		{
			name: "agentData",
			parameters: [
				["agentId", UUID],
				["sessionId", UUID],
			],
		},
		{
			name: "proposalData",
			parameters: [
				["groupId", UUID],
				["quorum", S32],
				["majority", F32],
				["duration", S32],
				["proposalText", Variable1],
			],
		},
	],
} satisfies PacketMetadata

export const startGroupProposal = createPacketSender<StartGroupProposalData>(
	startGroupProposalMetadata,
)

export const createStartGroupProposalDelegate =
	createPacketDelegate<StartGroupProposalData>(startGroupProposalMetadata)
