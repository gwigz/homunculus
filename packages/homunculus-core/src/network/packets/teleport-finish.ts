/**
 * TeleportFinish Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "../packet"
import { IP, Port, U8, U32, U64, UUID, Variable2 } from "../types"

export interface TeleportFinishData {
	info?: {
		agentId: string
		locationId: number
		simIp: IP
		simPort: Port
		regionHandle: number | bigint
		seedCapability: string | Buffer
		simAccess: number
		teleportFlags: number
	}
}

export const teleportFinishMetadata = {
	id: 69,
	name: "TeleportFinish",
	frequency: 2,
	trusted: true,
	blocks: [
		{
			name: "info",
			parameters: [
				["agentId", UUID],
				["locationId", U32],
				["simIp", IP],
				["simPort", Port],
				["regionHandle", U64],
				["seedCapability", Variable2],
				["simAccess", U8],
				["teleportFlags", U32],
			],
		},
	],
} satisfies PacketMetadata

export const teleportFinish = createPacketSender<TeleportFinishData>(
	teleportFinishMetadata,
)

export const createTeleportFinishDelegate =
	createPacketDelegate<TeleportFinishData>(teleportFinishMetadata)
