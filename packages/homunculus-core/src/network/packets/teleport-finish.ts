/**
 * TeleportFinish Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import * as Types from "~/network/types"
import { Packet } from "./packet"

export interface TeleportFinishData {
	info?: {
		agentId: string
		locationId: number
		simIp: Types.IP
		simPort: Types.Port
		regionHandle: number | bigint
		seedCapability: string | Buffer
		simAccess: number
		teleportFlags: number
	}
}

export class TeleportFinish extends Packet<TeleportFinishData> {
	public static override id = 69
	public static override frequency = 0
	public static override trusted = true
	public static override compression = false

	public static override format = new Map([
		[
			"info",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["agentId", Types.UUID],
					["locationId", Types.U32],
					["simIp", Types.IP],
					["simPort", Types.Port],
					["regionHandle", Types.U64],
					["seedCapability", Types.Variable2],
					["simAccess", Types.U8],
					["teleportFlags", Types.U32],
				]),
			},
		],
	])
}
