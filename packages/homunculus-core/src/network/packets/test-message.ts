/**
 * TestMessage Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import * as Types from "~/network/types"
import { Packet } from "./packet"

export interface TestMessageData {
	testBlock1?: {
		test1: number
	}
	neighborBlock?: {
		test0: number
		test1: number
		test2: number
	}[]
}

export class TestMessage extends Packet<TestMessageData> {
	public static override id = 1
	public static override frequency = 0
	public static override trusted = false
	public static override compression = true

	public static override format = new Map([
		[
			"testBlock1",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([["test1", Types.U32]]),
			},
		],
		[
			"neighborBlock",
			{
				parameters: new Map<string, Types.Type>([
					["test0", Types.U32],
					["test1", Types.U32],
					["test2", Types.U32],
				]),
			},
		],
	])
}
