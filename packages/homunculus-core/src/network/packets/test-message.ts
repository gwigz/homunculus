/**
 * TestMessage Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import { U32 } from "../types"
import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "./packet"

export interface TestMessageData {
	testBlock1?: {
		test1: number
	}
	neighborBlock?: {
		test0: number
		test1: number
		test2: number
	}[]
}

export const testMessageMetadata = {
	id: 1,
	name: "TestMessage",
	frequency: 2,
	compression: true,
	blocks: [
		{
			name: "testBlock1",
			parameters: [["test1", U32]],
		},
		{
			name: "neighborBlock",
			parameters: [
				["test0", U32],
				["test1", U32],
				["test2", U32],
			],
			multiple: true,
		},
	],
} satisfies PacketMetadata

export const testMessage =
	createPacketSender<TestMessageData>(testMessageMetadata)

export const createTestMessageDelegate =
	createPacketDelegate<TestMessageData>(testMessageMetadata)
