/**
 * TransferPacket Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import * as Types from "~/network/types"
import { Packet } from "./packet"

export interface TransferPacketData {
	transferData?: {
		transferId: string
		channelType: number
		packet: number
		status: number
		data: string | Buffer
	}
}

export class TransferPacket extends Packet<TransferPacketData> {
	public static override id = 17
	public static override frequency = 2
	public static override trusted = false
	public static override compression = false

	public static override format = new Map([
		[
			"transferData",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["transferId", Types.UUID],
					["channelType", Types.S32],
					["packet", Types.S32],
					["status", Types.S32],
					["data", Types.Variable2],
				]),
			},
		],
	])
}
