/**
 * UpdateGroupInfo Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import * as Types from "../types"
import { Packet } from "./packet"

export interface UpdateGroupInfoData {
	agentData?: {
		agentId?: string | Buffer
		sessionId?: string | Buffer
	}
	groupData?: {
		groupId: string | Buffer
		charter: string | Buffer
		showInList: boolean
		insigniaId: string | Buffer
		membershipFee: number
		openEnrollment: boolean
		allowPublish: boolean
		maturePublish: boolean
	}
}

export class UpdateGroupInfo extends Packet<UpdateGroupInfoData> {
	public static override id = 341
	public static override frequency = 0
	public static override trusted = false
	public static override compression = true

	public static override format = new Map([
		[
			"agentData",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["agentId", Types.UUID],
					["sessionId", Types.UUID],
				]),
			},
		],
		[
			"groupData",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["groupId", Types.UUID],
					["charter", Types.Variable2],
					["showInList", Types.Bool],
					["insigniaId", Types.UUID],
					["membershipFee", Types.S32],
					["openEnrollment", Types.Bool],
					["allowPublish", Types.Bool],
					["maturePublish", Types.Bool],
				]),
			},
		],
	])
}
