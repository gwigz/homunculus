/**
 * UpdateParcel Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import * as Types from "~/network/types"
import { Packet } from "./packet"

export interface UpdateParcelData {
	parcelData?: {
		parcelId: string
		regionHandle: number | bigint
		ownerId: string
		groupOwned: boolean
		status: number
		name: string | Buffer
		description: string | Buffer
		musicUrl: string | Buffer
		regionX: number
		regionY: number
		actualArea: number
		billableArea: number
		showDir: boolean
		isForSale: boolean
		category: number
		snapshotId: string
		userLocation: Types.Vector3
		salePrice: number
		authorizedBuyerId: string
		allowPublish: boolean
		maturePublish: boolean
	}
}

export class UpdateParcel extends Packet<UpdateParcelData> {
	public static override id = 221
	public static override frequency = 0
	public static override trusted = true
	public static override compression = true

	public static override format = new Map([
		[
			"parcelData",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["parcelId", Types.UUID],
					["regionHandle", Types.U64],
					["ownerId", Types.UUID],
					["groupOwned", Types.Bool],
					["status", Types.U8],
					["name", Types.Variable1],
					["description", Types.Variable1],
					["musicUrl", Types.Variable1],
					["regionX", Types.F32],
					["regionY", Types.F32],
					["actualArea", Types.S32],
					["billableArea", Types.S32],
					["showDir", Types.Bool],
					["isForSale", Types.Bool],
					["category", Types.U8],
					["snapshotId", Types.UUID],
					["userLocation", Types.Vector3],
					["salePrice", Types.S32],
					["authorizedBuyerId", Types.UUID],
					["allowPublish", Types.Bool],
					["maturePublish", Types.Bool],
				]),
			},
		],
	])
}
