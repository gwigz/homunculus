/**
 * UpdateParcel Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import { Bool, F32, S32, U8, U64, UUID, Variable1, Vector3 } from "../types"
import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "./packet"

export interface UpdateParcelData {
	parcelData?: {
		parcelId: string
		regionHandle: number | bigint
		ownerId: string
		groupOwned: boolean
		status: number
		name: string | Buffer
		description: string | Buffer
		musicUrl: string | Buffer
		regionX: number
		regionY: number
		actualArea: number
		billableArea: number
		showDir: boolean
		isForSale: boolean
		category: number
		snapshotId: string
		userLocation: Vector3
		salePrice: number
		authorizedBuyerId: string
		allowPublish: boolean
		maturePublish: boolean
	}
}

export const updateParcelMetadata = {
	id: 221,
	name: "UpdateParcel",
	frequency: 2,
	trusted: true,
	compression: true,
	blocks: [
		{
			name: "parcelData",
			parameters: [
				["parcelId", UUID],
				["regionHandle", U64],
				["ownerId", UUID],
				["groupOwned", Bool],
				["status", U8],
				["name", Variable1],
				["description", Variable1],
				["musicUrl", Variable1],
				["regionX", F32],
				["regionY", F32],
				["actualArea", S32],
				["billableArea", S32],
				["showDir", Bool],
				["isForSale", Bool],
				["category", U8],
				["snapshotId", UUID],
				["userLocation", Vector3],
				["salePrice", S32],
				["authorizedBuyerId", UUID],
				["allowPublish", Bool],
				["maturePublish", Bool],
			],
		},
	],
} satisfies PacketMetadata

export const updateParcel =
	createPacketSender<UpdateParcelData>(updateParcelMetadata)

export const createUpdateParcelDelegate =
	createPacketDelegate<UpdateParcelData>(updateParcelMetadata)
