/**
 * UserReportInternal Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import * as Types from "../types"
import { Packet } from "./packet"

export interface UserReportInternalData {
	reportData?: {
		reportType: number
		category: number
		reporterId: string | Buffer
		viewerPosition: Types.Vector3
		agentPosition: Types.Vector3
		screenshotId: string | Buffer
		objectId: string | Buffer
		ownerId: string | Buffer
		lastOwnerId: string | Buffer
		creatorId: string | Buffer
		regionId: string | Buffer
		abuserId: string | Buffer
		abuseRegionName: string | Buffer
		abuseRegionId: string | Buffer
		summary: string | Buffer
		details: string | Buffer
		versionString: string | Buffer
	}
}

export class UserReportInternal extends Packet<UserReportInternalData> {
	public static override id = 21
	public static override frequency = 0
	public static override trusted = true
	public static override compression = true

	public static override format = new Map([
		[
			"reportData",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["reportType", Types.U8],
					["category", Types.U8],
					["reporterId", Types.UUID],
					["viewerPosition", Types.Vector3],
					["agentPosition", Types.Vector3],
					["screenshotId", Types.UUID],
					["objectId", Types.UUID],
					["ownerId", Types.UUID],
					["lastOwnerId", Types.UUID],
					["creatorId", Types.UUID],
					["regionId", Types.UUID],
					["abuserId", Types.UUID],
					["abuseRegionName", Types.Variable1],
					["abuseRegionId", Types.UUID],
					["summary", Types.Variable1],
					["details", Types.Variable2],
					["versionString", Types.Variable1],
				]),
			},
		],
	])
}
