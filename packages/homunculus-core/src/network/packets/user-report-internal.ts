/**
 * UserReportInternal Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "../packet"
import { U8, UUID, Variable1, Variable2, Vector3 } from "../types"

export interface UserReportInternalData {
	reportData?: {
		reportType: number
		category: number
		reporterId: string
		viewerPosition: Vector3
		agentPosition: Vector3
		screenshotId: string
		objectId: string
		ownerId: string
		lastOwnerId: string
		creatorId: string
		regionId: string
		abuserId: string
		abuseRegionName: string | Buffer
		abuseRegionId: string
		summary: string | Buffer
		details: string | Buffer
		versionString: string | Buffer
	}
}

export const userReportInternalMetadata = {
	id: 21,
	name: "UserReportInternal",
	frequency: 2,
	trusted: true,
	compression: true,
	blocks: [
		{
			name: "reportData",
			parameters: [
				["reportType", U8],
				["category", U8],
				["reporterId", UUID],
				["viewerPosition", Vector3],
				["agentPosition", Vector3],
				["screenshotId", UUID],
				["objectId", UUID],
				["ownerId", UUID],
				["lastOwnerId", UUID],
				["creatorId", UUID],
				["regionId", UUID],
				["abuserId", UUID],
				["abuseRegionName", Variable1],
				["abuseRegionId", UUID],
				["summary", Variable1],
				["details", Variable2],
				["versionString", Variable1],
			],
		},
	],
} satisfies PacketMetadata

export const userReportInternal = createPacketSender<UserReportInternalData>(
	userReportInternalMetadata,
)

export const createUserReportInternalDelegate =
	createPacketDelegate<UserReportInternalData>(userReportInternalMetadata)
