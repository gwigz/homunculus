/**
 * UserReport Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "../packet"
import { U8, UUID, Variable1, Variable2, Vector3 } from "../types"

export interface UserReportData {
	agentData?: {
		agentId?: string
		sessionId?: string
	}
	reportData?: {
		reportType: number
		category: number
		position: Vector3
		checkFlags: number
		screenshotId: string
		objectId: string
		abuserId: string
		abuseRegionName: string | Buffer
		abuseRegionId: string
		summary: string | Buffer
		details: string | Buffer
		versionString: string | Buffer
	}
}

export const userReportMetadata = {
	id: 133,
	name: "UserReport",
	frequency: 2,
	compression: true,
	blocks: [
		{
			name: "agentData",
			parameters: [
				["agentId", UUID],
				["sessionId", UUID],
			],
		},
		{
			name: "reportData",
			parameters: [
				["reportType", U8],
				["category", U8],
				["position", Vector3],
				["checkFlags", U8],
				["screenshotId", UUID],
				["objectId", UUID],
				["abuserId", UUID],
				["abuseRegionName", Variable1],
				["abuseRegionId", UUID],
				["summary", Variable1],
				["details", Variable2],
				["versionString", Variable1],
			],
		},
	],
} satisfies PacketMetadata

export const userReport = createPacketSender<UserReportData>(userReportMetadata)

export const createUserReportDelegate =
	createPacketDelegate<UserReportData>(userReportMetadata)
