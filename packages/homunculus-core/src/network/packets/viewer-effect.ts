/**
 * ViewerEffect Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import { Color4, F32, U8, UUID, Variable1 } from "../types"
import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "./packet"

export interface ViewerEffectData {
	agentData?: {
		agentId?: string
		sessionId?: string
	}
	effect?: {
		id: string
		agentId: string
		type: number
		duration: number
		color: Color4
		typeData: string | Buffer
	}[]
}

export const viewerEffectMetadata = {
	id: 17,
	name: "ViewerEffect",
	frequency: 1,
	compression: true,
	blocks: [
		{
			name: "agentData",
			parameters: [
				["agentId", UUID],
				["sessionId", UUID],
			],
		},
		{
			name: "effect",
			parameters: [
				["id", UUID],
				["agentId", UUID],
				["type", U8],
				["duration", F32],
				["color", Color4],
				["typeData", Variable1],
			],
			multiple: true,
		},
	],
} satisfies PacketMetadata

export const viewerEffect =
	createPacketSender<ViewerEffectData>(viewerEffectMetadata)

export const createViewerEffectDelegate =
	createPacketDelegate<ViewerEffectData>(viewerEffectMetadata)
