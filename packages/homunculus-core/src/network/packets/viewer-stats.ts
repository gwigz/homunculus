/**
 * ViewerStats Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import * as Types from "../types"
import { Packet } from "./packet"

export interface ViewerStatsData {
	agentData: {
		agentId?: string
		sessionId?: string
		ip: Types.IP
		startTime: number
		runTime: number
		simFps: number
		fps: number
		agentsInView: number
		ping: number
		metersTraveled: number
		regionsVisited: number
		sysRam: number
		sysOs: string | Buffer
		sysCpu: string | Buffer
		sysGpu: string | Buffer
	}
	downloadTotals?: {
		world: number
		objects: number
		textures: number
	}
	netStats?: {
		bytes: number
		packets: number
		compressed: number
		savings: number
	}[]
	failStats?: {
		sendPacket: number
		dropped: number
		resent: number
		failedResends: number
		offCircuit: number
		invalid: number
	}
	miscStats?: {
		type: number
		value: number
	}[]
}

export class ViewerStats extends Packet<ViewerStatsData> {
	public static override id = 131
	public static override frequency = 0
	public static override trusted = false
	public static override compression = true

	public static override format = new Map([
		[
			"agentData",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["agentId", Types.UUID],
					["sessionId", Types.UUID],
					["ip", Types.IP],
					["startTime", Types.U32],
					["runTime", Types.F32],
					["simFps", Types.F32],
					["fps", Types.F32],
					["agentsInView", Types.U8],
					["ping", Types.F32],
					["metersTraveled", Types.F64],
					["regionsVisited", Types.S32],
					["sysRam", Types.U32],
					["sysOs", Types.Variable1],
					["sysCpu", Types.Variable1],
					["sysGpu", Types.Variable1],
				]),
			},
		],
		[
			"downloadTotals",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["world", Types.U32],
					["objects", Types.U32],
					["textures", Types.U32],
				]),
			},
		],
		[
			"netStats",
			{
				parameters: new Map<string, Types.Type>([
					["bytes", Types.U32],
					["packets", Types.U32],
					["compressed", Types.U32],
					["savings", Types.U32],
				]),
			},
		],
		[
			"failStats",
			{
				quantity: 1,
				parameters: new Map<string, Types.Type>([
					["sendPacket", Types.U32],
					["dropped", Types.U32],
					["resent", Types.U32],
					["failedResends", Types.U32],
					["offCircuit", Types.U32],
					["invalid", Types.U32],
				]),
			},
		],
		[
			"miscStats",
			{
				parameters: new Map<string, Types.Type>([
					["type", Types.U32],
					["value", Types.F64],
				]),
			},
		],
	])
}
