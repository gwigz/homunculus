/**
 * ViewerStats Packet
 *
 * This file is used to help our packet serialization and deserialization
 * process, and to create new packets on the fly.
 *
 * ⚠️ Do not edit this file manually, it is generated by the `codegen` script!
 *
 * @see {@link http://wiki.secondlife.com/wiki/Message_Layout}
 */

import {
	createPacketDelegate,
	createPacketSender,
	type PacketMetadata,
} from "../packet"
import { F32, F64, IP, S32, U8, U32, UUID, Variable1 } from "../types"

export interface ViewerStatsData {
	agentData: {
		agentId?: string
		sessionId?: string
		ip: IP
		startTime: number
		runTime: number
		simFps: number
		fps: number
		agentsInView: number
		ping: number
		metersTraveled: number
		regionsVisited: number
		sysRam: number
		sysOs: string | Buffer
		sysCpu: string | Buffer
		sysGpu: string | Buffer
	}
	downloadTotals?: {
		world: number
		objects: number
		textures: number
	}
	netStats?: {
		bytes: number
		packets: number
		compressed: number
		savings: number
	}[]
	failStats?: {
		sendPacket: number
		dropped: number
		resent: number
		failedResends: number
		offCircuit: number
		invalid: number
	}
	miscStats?: {
		type: number
		value: number
	}[]
}

export const viewerStatsMetadata = {
	id: 131,
	name: "ViewerStats",
	frequency: 2,
	compression: true,
	blocks: [
		{
			name: "agentData",
			parameters: [
				["agentId", UUID],
				["sessionId", UUID],
				["ip", IP],
				["startTime", U32],
				["runTime", F32],
				["simFps", F32],
				["fps", F32],
				["agentsInView", U8],
				["ping", F32],
				["metersTraveled", F64],
				["regionsVisited", S32],
				["sysRam", U32],
				["sysOs", Variable1],
				["sysCpu", Variable1],
				["sysGpu", Variable1],
			],
		},
		{
			name: "downloadTotals",
			parameters: [
				["world", U32],
				["objects", U32],
				["textures", U32],
			],
		},
		{
			name: "netStats",
			parameters: [
				["bytes", U32],
				["packets", U32],
				["compressed", U32],
				["savings", U32],
			],
			multiple: true,
			size: 2,
		},
		{
			name: "failStats",
			parameters: [
				["sendPacket", U32],
				["dropped", U32],
				["resent", U32],
				["failedResends", U32],
				["offCircuit", U32],
				["invalid", U32],
			],
		},
		{
			name: "miscStats",
			parameters: [
				["type", U32],
				["value", F64],
			],
			multiple: true,
		},
	],
} satisfies PacketMetadata

export const viewerStats =
	createPacketSender<ViewerStatsData>(viewerStatsMetadata)

export const createViewerStatsDelegate =
	createPacketDelegate<ViewerStatsData>(viewerStatsMetadata)
